{"version":3,"sources":["../sass-loader/node_modules/async/reflect.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;AAGA,QAAQ,OAAR,GAAkB,OAAlB;;AAEA,IAAI,iBAAiB,QAAQ,0BAAR,CAArB;;AAEA,IAAI,kBAAkB,uBAAuB,cAAvB,CAAtB;;AAEA,IAAI,SAAS,QAAQ,kBAAR,CAAb;;AAEA,IAAI,UAAU,uBAAuB,MAAvB,CAAd;;AAEA,IAAI,aAAa,QAAQ,sBAAR,CAAjB;;AAEA,IAAI,cAAc,uBAAuB,UAAvB,CAAlB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAS,OAAT,CAAiB,EAAjB,EAAqB;AACjB,QAAI,MAAM,CAAC,GAAG,YAAY,OAAhB,EAAyB,EAAzB,CAAV;AACA,WAAO,CAAC,GAAG,gBAAgB,OAApB,EAA6B,SAAS,SAAT,CAAmB,IAAnB,EAAyB,eAAzB,EAA0C;AAC1E,aAAK,IAAL,CAAU,SAAS,QAAT,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC;AACtC,gBAAI,KAAJ,EAAW;AACP,gCAAgB,IAAhB,EAAsB,EAAE,OAAO,KAAT,EAAtB;AACH,aAFD,MAEO;AACH,oBAAI,KAAJ;AACA,oBAAI,UAAU,MAAV,IAAoB,CAAxB,EAA2B;AACvB,4BAAQ,KAAR;AACH,iBAFD,MAEO;AACH,4BAAQ,CAAC,GAAG,QAAQ,OAAZ,EAAqB,SAArB,EAAgC,CAAhC,CAAR;AACH;AACD,gCAAgB,IAAhB,EAAsB,EAAE,OAAO,KAAT,EAAtB;AACH;AACJ,SAZD;;AAcA,eAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;AACH,KAhBM,CAAP;AAiBH;AACD,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"reflect-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = reflect;\n\nvar _initialParams = require('./internal/initialParams');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = (0, _wrapAsync2.default)(fn);\n    return (0, _initialParams2.default)(function reflectOn(args, reflectCallback) {\n        args.push(function callback(error, cbArg) {\n            if (error) {\n                reflectCallback(null, { error: error });\n            } else {\n                var value;\n                if (arguments.length <= 2) {\n                    value = cbArg;\n                } else {\n                    value = (0, _slice2.default)(arguments, 1);\n                }\n                reflectCallback(null, { value: value });\n            }\n        });\n\n        return _fn.apply(this, args);\n    });\n}\nmodule.exports = exports['default'];"]}