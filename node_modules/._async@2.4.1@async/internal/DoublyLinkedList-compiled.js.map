{"version":3,"sources":["../../sass-loader/node_modules/async/internal/DoublyLinkedList.js"],"names":[],"mappings":"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","file":"DoublyLinkedList-compiled.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = DLL;\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while (this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for (var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while (!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\nmodule.exports = exports[\"default\"];"]}