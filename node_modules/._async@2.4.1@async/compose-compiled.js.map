{"version":3,"sources":["../sass-loader/node_modules/async/compose.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,QAAQ,OAAR,GAAkB,YAAY,WAAW;AACvC,SAAO,MAAM,OAAN,CAAc,KAAd,CAAoB,IAApB,EAA0B,CAAC,GAAG,QAAQ,OAAZ,EAAqB,SAArB,EAAgC,OAAhC,EAA1B,CAAP;AACD,CAFD;;AAIA,IAAI,OAAO,QAAQ,OAAR,CAAX;;AAEA,IAAI,QAAQ,uBAAuB,IAAvB,CAAZ;;AAEA,IAAI,SAAS,QAAQ,kBAAR,CAAb;;AAEA,IAAI,UAAU,uBAAuB,MAAvB,CAAd;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"compose-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () /*...args*/{\n  return _seq2.default.apply(null, (0, _slice2.default)(arguments).reverse());\n};\n\nvar _seq = require('./seq');\n\nvar _seq2 = _interopRequireDefault(_seq);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n;\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nmodule.exports = exports['default'];"]}