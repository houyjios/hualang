{"version":3,"sources":["../sass-graph/node_modules/yargs/node_modules/read-pkg-up/node_modules/read-pkg/node_modules/normalize-package-data/node_modules/validate-npm-package-license/index.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,QAAQ,uBAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,cAAR,CAAd;;AAEA,IAAI,iBACF,uBACA,0DADA,GAEA,mBAFA,GAGA,6BAJF;;AAOA,IAAI,kBAAkB,0BAAtB;;AAEA,SAAS,UAAT,CAAoB,MAApB,EAA4B,MAA5B,EAAoC;AAClC,SAAO,OAAO,KAAP,CAAa,CAAb,EAAgB,OAAO,MAAvB,MAAmC,MAA1C;AACD;;AAED,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,MAAI,IAAI,cAAJ,CAAmB,SAAnB,CAAJ,EAAmC;AACjC,QAAI,UAAU,IAAI,OAAlB;AACA,WACE,WAAW,YAAX,EAAyB,OAAzB,KACA,WAAW,aAAX,EAA0B,OAA1B,CAFF;AAID,GAND,MAMO;AACL,WACE,eAAe,IAAI,IAAnB,KACA,eAAe,IAAI,KAAnB,CAFF;AAID;AACF;;AAED,OAAO,OAAP,GAAiB,UAAS,QAAT,EAAmB;AAClC,MAAI,GAAJ;;AAEA,MAAI;AACF,UAAM,MAAM,QAAN,CAAN;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,QAAI,KAAJ;AACA,QACE,aAAa,YAAb,IACA,aAAa,YAFf,EAGE;AACA,aAAO;AACL,6BAAqB,IADhB;AAEL,6BAAqB,IAFhB;AAGL,oBAAY;AAHP,OAAP;AAKD,KATD,MASO,IAAI,QAAQ,gBAAgB,IAAhB,CAAqB,QAArB,CAAZ,EAA4C;AACjD,aAAO;AACL,6BAAqB,IADhB;AAEL,6BAAqB,IAFhB;AAGL,gBAAQ,MAAM,CAAN;AAHH,OAAP;AAKD,KANM,MAMA;AACL,UAAI,SAAS;AACX,6BAAqB,KADV;AAEX,6BAAqB,KAFV;AAGX,kBAAU,CAAC,cAAD;AAHC,OAAb;AAKA,UAAI,YAAY,QAAQ,QAAR,CAAhB;AACA,UAAI,SAAJ,EAAe;AACb,eAAO,QAAP,CAAgB,IAAhB,CACE,iDAAiD,SAAjD,GAA6D,GAD/D;AAGD;AACD,aAAO,MAAP;AACD;AACF;;AAED,MAAI,eAAe,GAAf,CAAJ,EAAyB;AACvB,WAAO;AACL,2BAAqB,KADhB;AAEL,2BAAqB,KAFhB;AAGL,YAAM,IAHD;AAIL,gBAAU,CAAC,cAAD;AAJL,KAAP;AAMD,GAPD,MAOO;AACL,WAAO;AACL,2BAAqB,IADhB;AAEL,2BAAqB,IAFhB;AAGL,YAAM;AAHD,KAAP;AAKD;AACF,CApDD","file":"index-compiled.js","sourcesContent":["var parse = require('spdx-expression-parse');\nvar correct = require('spdx-correct');\n\nvar genericWarning = (\n  'license should be ' +\n  'a valid SPDX license expression (without \"LicenseRef\"), ' +\n  '\"UNLICENSED\", or ' +\n  '\"SEE LICENSE IN <filename>\"'\n);\n\nvar fileReferenceRE = /^SEE LICEN[CS]E IN (.+)$/;\n\nfunction startsWith(prefix, string) {\n  return string.slice(0, prefix.length) === prefix;\n}\n\nfunction usesLicenseRef(ast) {\n  if (ast.hasOwnProperty('license')) {\n    var license = ast.license;\n    return (\n      startsWith('LicenseRef', license) ||\n      startsWith('DocumentRef', license)\n    );\n  } else {\n    return (\n      usesLicenseRef(ast.left) ||\n      usesLicenseRef(ast.right)\n    );\n  }\n}\n\nmodule.exports = function(argument) {\n  var ast;\n\n  try {\n    ast = parse(argument);\n  } catch (e) {\n    var match\n    if (\n      argument === 'UNLICENSED' ||\n      argument === 'UNLICENCED'\n    ) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        unlicensed: true\n      };\n    } else if (match = fileReferenceRE.exec(argument)) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        inFile: match[1]\n      };\n    } else {\n      var result = {\n        validForOldPackages: false,\n        validForNewPackages: false,\n        warnings: [genericWarning]\n      };\n      var corrected = correct(argument);\n      if (corrected) {\n        result.warnings.push(\n          'license is similar to the valid expression \"' + corrected + '\"'\n        );\n      }\n      return result;\n    }\n  }\n\n  if (usesLicenseRef(ast)) {\n    return {\n      validForNewPackages: false,\n      validForOldPackages: false,\n      spdx: true,\n      warnings: [genericWarning]\n    };\n  } else {\n    return {\n      validForNewPackages: true,\n      validForOldPackages: true,\n      spdx: true\n    };\n  }\n};\n"]}