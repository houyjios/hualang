{"version":3,"sources":["../sass-graph/node_modules/yargs/yargs.js"],"names":[],"mappings":";;;;AAAA,IAAM,UAAU,QAAQ,eAAR,CAAhB;AACA,IAAM,SAAS,QAAQ,cAAR,CAAf;AACA,IAAM,UAAU,QAAQ,eAAR,CAAhB;AACA,IAAM,aAAa,QAAQ,kBAAR,CAAnB;AACA,IAAM,SAAS,QAAQ,cAAR,CAAf;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,QAAQ,QAAQ,aAAR,CAAd;AACA,IAAM,aAAa,QAAQ,kBAAR,CAAnB;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,YAAY,QAAQ,kBAAR,CAAlB;AACA,IAAM,cAAc,QAAQ,cAAR,CAApB;AACA,IAAM,eAAe,QAAQ,qBAAR,CAArB;AACA,IAAM,SAAS,QAAQ,cAAR,CAAf;;AAEA,IAAI,WAAU,OAAO,OAAP,GAAiB,KAA/B;AACA,SAAS,KAAT,CAAgB,WAAhB,EAA6B,GAA7B,EAAkC,aAAlC,EAAiD;AAC/C,gBAAc,eAAe,EAA7B,CAD+C,CACf;;AAEhC,MAAM,OAAO,EAAb;AACA,MAAI,UAAU,IAAd;AACA,MAAI,aAAa,IAAjB;AACA,MAAI,SAAS,EAAb;AACA,MAAI,SAAS,EAAb;AACA,MAAI,kBAAkB,EAAtB;AACA,MAAI,QAAQ,IAAZ;AACA,MAAI,aAAa,IAAjB;;AAEA,MAAM,OAAO,KAAK;AAChB,eAAW,KAAK,OAAL,CAAa,SAAb,EAAwB,WAAxB,CADK;AAEhB,iBAAa;AAFG,GAAL,CAAb;;AAKA,MAAI,CAAC,GAAL,EAAU,MAAM,QAAQ,GAAR,EAAN;;AAEV,OAAK,EAAL,GAAU,QAAQ,IAAR,CACP,KADO,CACD,CADC,EACE,CADF,EAEP,GAFO,CAEH,UAAU,CAAV,EAAa,CAAb,EAAgB;AACnB;AACA;AACA,QAAI,MAAM,CAAN,IAAW,yBAAyB,IAAzB,CAA8B,CAA9B,CAAf,EAAiD;AACjD,QAAI,IAAI,OAAO,GAAP,EAAY,CAAZ,CAAR;AACA,WAAO,EAAE,KAAF,CAAQ,sBAAR,KAAmC,EAAE,MAAF,GAAW,EAAE,MAAhD,GAAyD,CAAzD,GAA6D,CAApE;AACD,GARO,EASP,IATO,CASF,GATE,EASG,IATH,EAAV;;AAWA,MAAI,QAAQ,GAAR,CAAY,CAAZ,KAAkB,SAAlB,IAA+B,QAAQ,IAAR,CAAa,CAAb,MAAoB,QAAQ,GAAR,CAAY,CAAnE,EAAsE;AACpE,SAAK,EAAL,GAAU,QAAQ,GAAR,CAAY,CAAZ,CAAc,OAAd,CACR,KAAK,OAAL,CAAa,QAAQ,QAArB,IAAiC,GADzB,EAC8B,EAD9B,CAAV;AAGD;;AAED;AACA;AACA,MAAM,UAAU,EAAE,QAAQ,CAAC,CAAX,EAAc,UAAU,EAAxB,EAA4B,OAAO,EAAnC,EAAhB;AACA,OAAK,UAAL,GAAkB,YAAY;AAC5B,WAAO,OAAP;AACD,GAFD;;AAIA;AACA;AACA;AACA,MAAI,OAAJ;AACA,OAAK,YAAL,GAAoB,KAAK,KAAL,GAAa,UAAU,OAAV,EAAmB;AAClD,YAAQ,MAAR;AACA,cAAU,WAAW,EAArB;AACA,cAAU,WAAW,EAArB;AACA;AACA;AACA;AACA,QAAI,aAAa,EAAjB;AACA,eAAW,KAAX,GAAmB,QAAQ,KAAR,GAAgB,QAAQ,KAAxB,GAAgC,EAAnD;AACA,eAAW,aAAX,GAA2B,QAAQ,aAAR,GAAwB,QAAQ,aAAhC,GAAgD,EAA3E;;AAEA;AACA;AACA,QAAI,cAAc,EAAlB;AACA,eAAW,KAAX,CAAiB,OAAjB,CAAyB,UAAU,CAAV,EAAa;AACpC,kBAAY,CAAZ,IAAiB,IAAjB,CACC,CAAC,QAAQ,CAAR,KAAc,EAAf,EAAmB,OAAnB,CAA2B,UAAU,CAAV,EAAa;AACvC,oBAAY,CAAZ,IAAiB,IAAjB;AACD,OAFA;AAGF,KALD;;AAOA;AACA,sBAAkB,OAAO,IAAP,CAAY,MAAZ,EAAoB,MAApB,CAA2B,UAAU,GAAV,EAAe,SAAf,EAA0B;AACrE,UAAI,OAAO,OAAO,SAAP,EAAkB,MAAlB,CAAyB,UAAU,GAAV,EAAe;AACjD,eAAO,EAAE,OAAO,WAAT,CAAP;AACD,OAFU,CAAX;AAGA,UAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAI,SAAJ,IAAiB,IAAjB;AACD;AACD,aAAO,GAAP;AACD,KARiB,EAQf,EARe,CAAlB;AASA;AACA,aAAS,EAAT;;AAEA,QAAI,eAAe,CACjB,OADiB,EACR,SADQ,EACG,QADH,EACa,aADb,EAC4B,gBAD5B,EAEjB,OAFiB,EAER,WAFQ,EAEK,QAFL,CAAnB;;AAKA,QAAI,gBAAgB,CAClB,MADkB,EACV,KADU,EACH,OADG,EACM,SADN,EACiB,oBADjB,EAElB,QAFkB,EAER,SAFQ,EAEG,iBAFH,EAEsB,kBAFtB,EAE0C,QAF1C,CAApB;;AAKA,iBAAa,OAAb,CAAqB,UAAU,CAAV,EAAa;AAChC,iBAAW,CAAX,IAAgB,CAAC,QAAQ,CAAR,KAAc,EAAf,EAAmB,MAAnB,CAA0B,UAAU,CAAV,EAAa;AACrD,eAAO,CAAC,YAAY,CAAZ,CAAR;AACD,OAFe,CAAhB;AAGD,KAJD;;AAMA,kBAAc,OAAd,CAAsB,UAAU,CAAV,EAAa;AACjC,iBAAW,CAAX,IAAgB,UAAU,QAAQ,CAAR,CAAV,EAAsB,UAAU,CAAV,EAAa,CAAb,EAAgB;AACpD,eAAO,CAAC,YAAY,CAAZ,CAAR;AACD,OAFe,CAAhB;AAGD,KAJD;;AAMA,eAAW,SAAX,GAAuB,QAAQ,SAA/B;AACA,cAAU,UAAV;;AAEA;AACA;AACA,YAAQ,QAAQ,MAAM,KAAN,CAAY,WAAZ,CAAR,GAAmC,MAAM,IAAN,EAAY,IAAZ,CAA3C;AACA,iBAAa,aAAa,WAAW,KAAX,CAAiB,WAAjB,CAAb,GAA6C,WAAW,IAAX,EAAiB,KAAjB,EAAwB,IAAxB,CAA1D;AACA,cAAU,UAAU,QAAQ,KAAR,EAAV,GAA4B,QAAQ,IAAR,EAAc,KAAd,EAAqB,UAArB,CAAtC;AACA,QAAI,CAAC,UAAL,EAAiB,aAAa,WAAW,IAAX,EAAiB,KAAjB,EAAwB,OAAxB,CAAb;;AAEjB,QAAI,CAAC,YAAL,EAAmB,SAAS,KAAT;AACnB,wBAAoB,IAApB;AACA,aAAS,EAAT;AACA,gBAAY,IAAZ;AACA,gBAAY,KAAZ;AACA,SAAK,MAAL,GAAc,KAAd;;AAEA,WAAO,IAAP;AACD,GA1ED;AA2EA,OAAK,YAAL;;AAEA;AACA,MAAI,MAAJ;AACA,WAAS,MAAT,GAAmB;AACjB,aAAS,EAAT;AACA,WAAO,OAAP,GAAiB,OAAjB;AACA,WAAO,aAAP,GAAuB,QAAQ,aAAR,CAAsB,KAAtB,CAA4B,CAA5B,CAAvB;AACA,WAAO,WAAP,GAAqB,WAArB;AACA,WAAO,MAAP,GAAgB,MAAhB;AACA,UAAM,MAAN;AACA,eAAW,MAAX;AACA,YAAQ,MAAR;AACA,WAAO,MAAP,GAAgB,MAAhB;AACA,WAAO,iBAAP,GAA2B,iBAA3B;AACA,WAAO,MAAP,GAAgB,MAAhB;AACA,WAAO,SAAP,GAAmB,SAAnB;AACA,WAAO,SAAP,GAAmB,SAAnB;AACA,WAAO,MAAP,GAAgB,KAAK,MAArB;AACD;AACD,WAAS,QAAT,GAAqB;AACnB,cAAU,OAAO,OAAjB;AACA,YAAQ,aAAR,GAAwB,OAAO,aAA/B;AACA,kBAAc,OAAO,WAArB;AACA,aAAS,OAAO,MAAhB;AACA,aAAS,OAAO,MAAhB;AACA,gBAAY,OAAO,SAAnB;AACA,gBAAY,OAAO,SAAnB;AACA,SAAK,MAAL,GAAc,OAAO,MAArB;AACA,UAAM,QAAN;AACA,eAAW,QAAX;AACA,YAAQ,QAAR;AACA,aAAS,OAAO,MAAhB;AACA,wBAAoB,OAAO,iBAA3B;AACA,cAAU,IAAV;AACA,mBAAe,IAAf;AACA,aAAS,SAAT;AACD;;AAED,OAAK,OAAL,GAAe,UAAU,IAAV,EAAgB;AAC7B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,SAAxB,EAAmC,IAAnC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,KAAL,GAAa,UAAU,IAAV,EAAgB;AAC3B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,OAAxB,EAAiC,IAAjC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,MAAL,GAAc,UAAU,IAAV,EAAgB;AAC5B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,QAAxB,EAAkC,IAAlC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,SAAL,GAAiB,UAAU,IAAV,EAAgB;AAC/B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,WAAxB,EAAqC,IAArC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,KAAL,GAAa,UAAU,IAAV,EAAgB;AAC3B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,OAAxB,EAAiC,IAAjC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,MAAL,GAAc,UAAU,IAAV,EAAgB;AAC5B,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,QAAxB,EAAkC,IAAlC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,WAAL,GAAmB,UAAU,IAAV,EAAgB;AACjC,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,aAAxB,EAAuC,IAAvC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,cAAL,GAAsB,UAAU,IAAV,EAAgB;AACpC,YAAQ,gBAAR,EAA0B,CAAC,IAAD,CAA1B,EAAkC,UAAU,MAA5C;AACA,4BAAwB,gBAAxB,EAA0C,IAA1C;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,WAAS,uBAAT,CAAkC,IAAlC,EAAwC,IAAxC,EAA8C,KAA9C,EAAqD;AACnD,WAAO,GAAG,MAAH,CAAU,IAAV,CAAP;AACA,SAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,cAAQ,IAAR,EAAc,IAAd,CAAmB,GAAnB;AACD,KAFD;AAGD;;AAED,OAAK,KAAL,GAAa,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjC,YAAQ,gCAAR,EAA0C,CAAC,GAAD,EAAM,KAAN,CAA1C,EAAwD,UAAU,MAAlE;AACA,6BAAyB,KAAK,KAA9B,EAAqC,KAArC,EAA4C,MAA5C,EAAoD,GAApD,EAAyD,KAAzD;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,KAAf,EAAsB;AACnC,YAAQ,sCAAR,EAAgD,CAAC,GAAD,EAAM,KAAN,CAAhD,EAA8D,UAAU,MAAxE;AACA,6BAAyB,KAAK,OAA9B,EAAuC,IAAvC,EAA6C,SAA7C,EAAwD,GAAxD,EAA6D,KAA7D;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,KAAL,GAAa,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjC,YAAQ,sCAAR,EAAgD,CAAC,GAAD,EAAM,KAAN,CAAhD,EAA8D,UAAU,MAAxE;AACA,6BAAyB,KAAK,KAA9B,EAAqC,IAArC,EAA2C,OAA3C,EAAoD,GAApD,EAAyD,KAAzD;AACA,WAAO,IAAP;AACD,GAJD;;AAMA;AACA,OAAK,OAAL,GAAe,KAAK,QAAL,GAAgB,UAAU,GAAV,EAAe,KAAf,EAAsB,kBAAtB,EAA0C;AACvE,YAAQ,oCAAR,EAA8C,CAAC,GAAD,EAAM,KAAN,EAAa,kBAAb,CAA9C,EAAgF,UAAU,MAA1F;AACA,QAAI,kBAAJ,EAAwB,QAAQ,kBAAR,CAA2B,GAA3B,IAAkC,kBAAlC;AACxB,QAAI,OAAO,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAI,CAAC,QAAQ,kBAAR,CAA2B,GAA3B,CAAL,EAAsC,QAAQ,kBAAR,CAA2B,GAA3B,IAAkC,MAAM,mBAAN,CAA0B,KAA1B,CAAlC;AACtC,cAAQ,MAAM,IAAN,EAAR;AACD;AACD,6BAAyB,KAAK,OAA9B,EAAuC,KAAvC,EAA8C,SAA9C,EAAyD,GAAzD,EAA8D,KAA9D;AACA,WAAO,IAAP;AACD,GATD;;AAWA,OAAK,QAAL,GAAgB,UAAU,GAAV,EAAe,IAAf,EAAqB;AACnC,YAAQ,gCAAR,EAA0C,CAAC,GAAD,EAAM,IAAN,CAA1C,EAAuD,UAAU,MAAjE;AACA,6BAAyB,KAAK,QAA9B,EAAwC,KAAxC,EAA+C,KAA/C,EAAsD,GAAtD,EAA2D,IAA3D;AACA,UAAM,QAAN,CAAe,GAAf,EAAoB,IAApB;AACA,WAAO,IAAP;AACD,GALD;;AAOA,OAAK,YAAL,GAAoB,UAAU,IAAV,EAAgB,GAAhB,EAAqB;AACvC,YAAQ,gCAAR,EAA0C,CAAC,IAAD,EAAO,GAAP,CAA1C,EAAuD,UAAU,MAAjE;AACA,6BAAyB,KAAK,YAA9B,EAA4C,KAA5C,EAAmD,iBAAnD,EAAsE,IAAtE,EAA4E,GAA5E;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,MAAL,GAAc,UAAU,IAAV,EAAgB,KAAhB,EAAuB;AACnC,YAAQ,kCAAR,EAA4C,CAAC,IAAD,EAAO,KAAP,CAA5C,EAA2D,UAAU,MAArE;AACA,6BAAyB,KAAK,MAA9B,EAAsC,KAAtC,EAA6C,QAA7C,EAAuD,IAAvD,EAA6D,KAA7D;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,WAAS,wBAAT,CAAmC,OAAnC,EAA4C,OAA5C,EAAqD,IAArD,EAA2D,GAA3D,EAAgE,KAAhE,EAAuE;AACrE,QAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB;AACA,UAAI,OAAO,EAAX;AACA,UAAI,OAAJ,CAAY,UAAU,CAAV,EAAa;AACvB,aAAK,CAAL,IAAU,KAAV;AACD,OAFD;AAGA,cAAQ,IAAR;AACD,KAPD,MAOO,IAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAClC;AACA,aAAO,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,UAAU,CAAV,EAAa;AACpC,gBAAQ,CAAR,EAAW,IAAI,CAAJ,CAAX;AACD,OAFD;AAGD,KALM,MAKA;AACL;AACA,UAAI,OAAJ,EAAa;AACX,gBAAQ,IAAR,EAAc,GAAd,IAAqB,CAAC,QAAQ,IAAR,EAAc,GAAd,KAAsB,EAAvB,EAA2B,MAA3B,CAAkC,KAAlC,CAArB;AACD,OAFD,MAEO;AACL,gBAAQ,IAAR,EAAc,GAAd,IAAqB,KAArB;AACD;AACF;AACF;;AAED,OAAK,MAAL,GAAc,UAAU,GAAV,EAAe,GAAf,EAAoB,OAApB,EAA6B;AACzC,YAAQ,8CAAR,EAAwD,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAxD,EAA6E,UAAU,MAAvF;AACA;AACA,QAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,YAAM,aAAa,GAAb,EAAkB,GAAlB,CAAN;AACA,cAAQ,aAAR,GAAwB,CAAC,QAAQ,aAAR,IAAyB,EAA1B,EAA8B,MAA9B,CAAqC,GAArC,CAAxB;AACA,aAAO,IAAP;AACD;;AAED;AACA,QAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC7B,gBAAU,GAAV;AACA,YAAM,IAAN;AACD;;AAED,UAAM,OAAO,QAAb;AACA,SAAK,QAAL,CAAc,GAAd,EAAmB,OAAO,MAAM,eAAN,CAAsB,0BAAtB,CAA1B,EACC,CAAC,MAAM,OAAN,CAAc,GAAd,IAAqB,GAArB,GAA2B,CAAC,GAAD,CAA5B,EAAmC,OAAnC,CAA2C,UAAU,CAAV,EAAa;AACvD,cAAQ,MAAR,CAAe,CAAf,IAAoB,WAAW,IAA/B;AACD,KAFA;;AAID,WAAO,IAAP;AACD,GAtBD;;AAwBA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,WAAf,EAA4B;AACzC,YAAQ,mBAAR,EAA6B,CAAC,GAAD,EAAM,WAAN,CAA7B,EAAiD,UAAU,MAA3D;AACA,UAAM,OAAN,CAAc,GAAd,EAAmB,WAAnB;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,WAAf,EAA4B,OAA5B,EAAqC,OAArC,EAA8C;AAC3D,YAAQ,qEAAR,EAA+E,CAAC,GAAD,EAAM,WAAN,EAAmB,OAAnB,EAA4B,OAA5B,CAA/E,EAAqH,UAAU,MAA/H;AACA,YAAQ,UAAR,CAAmB,GAAnB,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,OAA9C;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,UAAL,GAAkB,UAAU,GAAV,EAAe,IAAf,EAAqB;AACrC,YAAQ,mBAAR,EAA6B,CAAC,GAAD,EAAM,IAAN,CAA7B,EAA0C,UAAU,MAApD;AACA,QAAM,MAAM,iBAAiB,OAA7B;AACA,YAAQ,YAAR,CAAqB,GAArB,EAA0B,KAAK,UAAL,EAA1B,EAA6C,GAA7C,EAAkD,QAAQ,iBAAR,GAAlD,EAAgF,IAAhF;AACA,WAAO,IAAP;AACD,GALD;;AAOA;AACA;AACA,OAAK,MAAL,GAAc,KAAK,QAAL,GAAgB,KAAK,OAAL,GAAe,UAAU,IAAV,EAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACrE;AACA;AACA;AACA,QAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,UAAI,OAAJ,CAAY,UAAU,GAAV,EAAe;AACzB,aAAK,YAAL,CAAkB,GAAlB,EAAuB,GAAvB;AACD,OAFD;AAGA,YAAM,QAAN;AACD,KALD,MAKO,IAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAClC,YAAM,GAAN;AACA,YAAM,QAAN;AACD;;AAED,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAK,aAAL,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC;AACD,KAFD,MAEO,IAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AAC9B,WAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,aAAK,YAAL,CAAkB,GAAlB,EAAuB,GAAvB;AACD,OAFD;AAGD,KAJM,MAIA;AACL,UAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAK,YAAL,CAAkB,IAAlB,EAAwB,GAAxB;AACD,OAFD,MAEO,IAAI,QAAQ,IAAR,IAAgB,OAAO,GAAP,KAAe,WAAnC,EAAgD;AACrD,aAAK,YAAL,CAAkB,IAAlB;AACD;AACF;;AAED,WAAO,IAAP;AACD,GA7BD;;AA+BA,OAAK,aAAL,GAAqB,UAAU,GAAV,EAAe,GAAf,EAAoB,MAApB,EAA4B,MAA5B,EAAoC;AACvD,YAAQ,sDAAR,EAAgE,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,MAAnB,CAAhE,EAA4F,UAAU,MAAtG;;AAEA,QAAI,OAAO,GAAP,KAAe,WAAnB,EAAgC,MAAM,CAAN;;AAEhC,QAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAS,GAAT;AACA,YAAM,QAAN;AACD;;AAED,SAAK,MAAL,CAAY,GAAZ,EAAiB,KAAjB;;AAEA,YAAQ,gBAAR,CAAyB,CAAzB,GAA6B;AAC3B,WAAK,GADsB;AAE3B,WAAK,GAFsB;AAG3B,cAAQ,MAHmB;AAI3B,cAAQ;AAJmB,KAA7B;;AAOA,WAAO,IAAP;AACD,GApBD;;AAsBA,OAAK,kBAAL,GAA0B,YAAY;AACpC,YAAQ,EAAR,EAAY,CAAZ;AACA,WAAO,QAAQ,eAAf;AACD,GAHD;;AAKA,OAAK,mBAAL,GAA2B,YAAY;AACrC,YAAQ,EAAR,EAAY,CAAZ;AACA,WAAO,QAAQ,gBAAf;AACD,GAHD;;AAKA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,KAAf,EAAsB;AACnC,YAAQ,0BAAR,EAAoC,CAAC,GAAD,EAAM,KAAN,CAApC,EAAkD,UAAU,MAA5D;AACA,eAAW,OAAX,CAAmB,GAAnB,EAAwB,KAAxB;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,SAAL,GAAiB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AACrC,YAAQ,0BAAR,EAAoC,CAAC,IAAD,EAAO,IAAP,CAApC,EAAkD,UAAU,MAA5D;AACA,eAAW,SAAX,CAAqB,IAArB,EAA2B,IAA3B;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,KAAL,GAAa,UAAU,GAAV,EAAe,IAAf,EAAqB;AAChC,YAAQ,+BAAR,EAAyC,CAAC,GAAD,EAAM,IAAN,CAAzC,EAAsD,UAAU,MAAhE;;AAEA,QAAI,CAAC,IAAD,IAAS,QAAO,GAAP,yCAAO,GAAP,OAAe,QAA5B,EAAsC;AACpC,aAAO,GAAP;AACA,YAAM,IAAN;AACD;;AAED,UAAM,KAAN,CAAY,GAAZ;;AAEA,QAAI,IAAJ,EAAU,KAAK,OAAL,CAAa,IAAb;;AAEV,WAAO,IAAP;AACD,GAbD;;AAeA,OAAK,QAAL,GAAgB,KAAK,MAAL,GAAc,UAAU,GAAV,EAAe;AAC3C,YAAQ,UAAR,EAAoB,CAAC,GAAD,CAApB,EAA2B,UAAU,MAArC;AACA,UAAM,MAAN,CAAa,GAAb;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,IAAL,GAAY,UAAU,CAAV,EAAa;AACvB,YAAQ,YAAR,EAAsB,CAAC,CAAD,CAAtB,EAA2B,UAAU,MAArC;AACA,UAAM,MAAN,CAAa,CAAb;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,KAAL,GAAa,UAAU,CAAV,EAAa,OAAb,EAAsB;AACjC,YAAQ,sBAAR,EAAgC,CAAC,CAAD,EAAI,OAAJ,CAAhC,EAA8C,UAAU,MAAxD;AACA,eAAW,KAAX,CAAiB,CAAjB,EAAoB,YAAY,KAAhC;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,MAAL,GAAc,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AACvC,YAAQ,0BAAR,EAAoC,CAAC,OAAD,EAAU,MAAV,CAApC,EAAuD,UAAU,MAAjE;AACA,cAAU,GAAG,MAAH,CAAU,OAAV,CAAV;AACA,QAAI,WAAW,KAAf,EAAsB;AACpB,cAAQ,KAAR,GAAgB,QAAQ,KAAR,CAAc,MAAd,CAAqB,UAAU,CAAV,EAAa;AAChD,eAAO,QAAQ,OAAR,CAAgB,CAAhB,MAAuB,CAAC,CAA/B;AACD,OAFe,CAAhB;AAGD,KAJD,MAIO;AACL,cAAQ,OAAR,CAAgB,UAAU,CAAV,EAAa;AAC3B,YAAI,QAAQ,KAAR,CAAc,OAAd,CAAsB,CAAtB,MAA6B,CAAC,CAAlC,EAAqC,QAAQ,KAAR,CAAc,IAAd,CAAmB,CAAnB;AACtC,OAFD;AAGD;AACD,WAAO,IAAP;AACD,GAbD;;AAeA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClC,YAAQ,mBAAR,EAA6B,CAAC,GAAD,EAAM,IAAN,CAA7B,EAA0C,UAAU,MAApD;AACA,QAAI,OAAO,IAAX;AACA;AACA;AACA;AACA,QAAI,MAAM,MAAM,QAAQ,GAAd,CAAV;;AAEA;AACA,QAAI,IAAI,GAAJ,KAAY,QAAO,IAAI,GAAJ,CAAP,MAAoB,QAApC,EAA8C;AAC5C,aAAO,aAAa,IAAI,GAAJ,CAAb,EAAuB,QAAQ,GAA/B,EAAoC,GAApC,CAAP;AACA,cAAQ,aAAR,GAAwB,CAAC,QAAQ,aAAR,IAAyB,EAA1B,EAA8B,MAA9B,CAAqC,IAArC,CAAxB;AACD;;AAED,WAAO,IAAP;AACD,GAfD;;AAiBA,MAAI,OAAO,EAAX;AACA,WAAS,KAAT,CAAgB,IAAhB,EAAsB;AACpB,QAAI,QAAQ,QAAQ,GAApB;AACA,QAAI,KAAK,KAAL,CAAJ,EAAiB,OAAO,KAAK,KAAL,CAAP;AACjB,QAAM,YAAY,QAAQ,aAAR,CAAlB;;AAEA,QAAI,MAAM,EAAV;AACA,QAAI;AACF,YAAM,UAAU,IAAV,CAAe;AACnB,aAAK,QAAQ,QAAQ,uBAAR,EAAiC,iBAAiB,OAAlD,CADM;AAEnB,mBAAW;AAFQ,OAAf,CAAN;AAID,KALD,CAKE,OAAO,IAAP,EAAa,CAAE;;AAEjB,SAAK,KAAL,IAAc,IAAI,GAAJ,IAAW,EAAzB;AACA,WAAO,KAAK,KAAL,CAAP;AACD;;AAED,MAAI,UAAU,IAAd;AACA,MAAI,eAAe,IAAnB;AACA,OAAK,KAAL,GAAa,UAAU,IAAV,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC;AACnD,YAAQ,qDAAR,EAA+D,CAAC,IAAD,EAAO,YAAP,EAAqB,QAArB,CAA/D,EAA+F,UAAU,MAAzG;;AAEA;AACA;AACA,QAAI,QAAO,YAAP,yCAAO,YAAP,OAAwB,QAA5B,EAAsC;AACpC,qBAAe,YAAf;AACA,qBAAe,QAAf;AACD;;AAED;AACA;AACA;AACA,QAAI,OAAO,YAAP,KAAwB,UAA5B,EAAwC;AACtC,gBAAU,YAAV;AACA,qBAAe,IAAf;AACD;AACD;AACA;AACA,QAAI,CAAC,YAAL,EAAmB,cAAc,IAAd;;AAEnB;AACA,QAAI,OAAJ,EAAa,cAAc,KAAd;;AAEb,QAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,EAAsB,YAAtB,CAAb;AACA,QAAI,OAAJ,EAAa,QAAQ,SAAR,EAAmB,MAAnB,EAA2B,MAA3B;AACb;;AAEA,WAAO,MAAP;AACD,GA7BD;;AA+BA,OAAK,gBAAL,GAAwB,YAAY;AAClC,WAAO,gBAAgB,EAAvB;AACD,GAFD;;AAIA,OAAK,iBAAL,GAAyB,YAAY;AACnC,WAAO,CAAC,CAAC,OAAT;AACD,GAFD;;AAIA,OAAK,MAAL,GAAc,KAAK,OAAL,GAAe,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/C,YAAQ,0BAAR,EAAoC,CAAC,GAAD,EAAM,GAAN,CAApC,EAAgD,UAAU,MAA1D;AACA,QAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,aAAO,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,UAAU,CAAV,EAAa;AACpC,aAAK,OAAL,CAAa,CAAb,EAAgB,IAAI,CAAJ,CAAhB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,UAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,cAAM,EAAN;AACD;;AAED,cAAQ,GAAR,CAAY,GAAZ,IAAmB,IAAnB,CALK,CAKmB;;AAExB,UAAI,IAAI,KAAR,EAAe,KAAK,KAAL,CAAW,GAAX,EAAgB,IAAI,KAApB;;AAEf,UAAI,SAAS,IAAI,MAAJ,IAAc,IAAI,QAAlB,IAA8B,IAAI,OAA/C;;AAEA;AACA,UAAI,MAAJ,EAAY;AACV,aAAK,MAAL,CAAY,GAAZ,EAAiB,MAAjB;AACD;;AAED,UAAI,IAAI,YAAR,EAAsB;AACpB,aAAK,YAAL,CAAkB,GAAlB,EAAuB,OAAO,IAAI,YAAX,KAA4B,QAA5B,GAAuC,IAAI,YAA3C,GAA0D,SAAjF;AACD;;AAED,UAAI,YAAY,GAAhB,EAAqB;AACnB,aAAK,MAAL,CAAY,GAAZ,EAAiB,IAAI,YAArB;AACD;;AAED,UAAI,eAAe,GAAnB,EAAwB;AACtB,aAAK,SAAL,CAAe,GAAf,EAAoB,IAAI,SAAxB;AACD;;AAED,UAAI,aAAa,GAAjB,EAAsB;AACpB,aAAK,OAAL,CAAa,GAAb,EAAkB,IAAI,OAAtB;AACD;;AAED,UAAI,aAAa,GAAjB,EAAsB;AACpB,aAAK,OAAL,CAAa,GAAb,EAAkB,IAAI,OAAtB;AACD;;AAED,UAAI,WAAW,GAAf,EAAoB;AAClB,aAAK,KAAL,CAAW,GAAX,EAAgB,IAAI,KAApB;AACD;;AAED,UAAI,eAAe,GAAnB,EAAwB;AACtB,aAAK,SAAL,CAAe,GAAf;AACD;;AAED,UAAI,aAAa,GAAjB,EAAsB;AACpB,aAAK,OAAL,CAAa,GAAb,EAAkB,IAAI,OAAtB;AACD;;AAED,UAAI,YAAY,GAAhB,EAAqB;AACnB,aAAK,MAAL,CAAY,GAAZ,EAAiB,IAAI,MAArB;AACD;;AAED,UAAI,WAAW,GAAf,EAAoB;AAClB,aAAK,KAAL,CAAW,GAAX,EAAgB,IAAI,KAApB;AACD;;AAED,UAAI,IAAI,OAAJ,IAAe,IAAI,IAAJ,KAAa,SAAhC,EAA2C;AACzC,aAAK,OAAL,CAAa,GAAb;AACA,YAAI,IAAI,KAAR,EAAe,KAAK,OAAL,CAAa,IAAI,KAAjB;AAChB;;AAED,UAAI,IAAI,KAAJ,IAAa,IAAI,IAAJ,KAAa,OAA9B,EAAuC;AACrC,aAAK,KAAL,CAAW,GAAX;AACA,YAAI,IAAI,KAAR,EAAe,KAAK,KAAL,CAAW,IAAI,KAAf;AAChB;;AAED,UAAI,IAAI,MAAJ,IAAc,IAAI,IAAJ,KAAa,QAA/B,EAAyC;AACvC,aAAK,MAAL,CAAY,GAAZ;AACA,YAAI,IAAI,KAAR,EAAe,KAAK,MAAL,CAAY,IAAI,KAAhB;AAChB;;AAED,UAAI,IAAI,MAAJ,IAAc,IAAI,IAAJ,KAAa,QAA/B,EAAyC;AACvC,aAAK,MAAL,CAAY,GAAZ;AACA,YAAI,IAAI,KAAR,EAAe,KAAK,MAAL,CAAY,IAAI,KAAhB;AAChB;;AAED,UAAI,IAAI,KAAJ,IAAa,IAAI,IAAJ,KAAa,OAA9B,EAAuC;AACrC,aAAK,KAAL,CAAW,GAAX;AACD;;AAED,UAAI,OAAO,IAAI,MAAX,KAAsB,SAA1B,EAAqC;AACnC,aAAK,MAAL,CAAY,GAAZ,EAAiB,IAAI,MAArB;AACD;;AAED,UAAI,IAAI,kBAAR,EAA4B;AAC1B,gBAAQ,kBAAR,CAA2B,GAA3B,IAAkC,IAAI,kBAAtC;AACD;;AAED,UAAI,IAAI,cAAR,EAAwB;AACtB,aAAK,cAAL,CAAoB,GAApB;AACD;;AAED,UAAI,OAAO,IAAI,QAAJ,IAAgB,IAAI,WAApB,IAAmC,IAAI,IAAlD;AACA,UAAI,IAAJ,EAAU;AACR,aAAK,QAAL,CAAc,GAAd,EAAmB,IAAnB;AACD;;AAED,UAAI,IAAI,WAAR,EAAqB;AACnB,aAAK,WAAL,CAAiB,GAAjB;AACD;AACF;;AAED,WAAO,IAAP;AACD,GA7GD;AA8GA,OAAK,UAAL,GAAkB,YAAY;AAC5B,WAAO,OAAP;AACD,GAFD;;AAIA,OAAK,KAAL,GAAa,UAAU,IAAV,EAAgB,SAAhB,EAA2B;AACtC,YAAQ,yBAAR,EAAmC,CAAC,IAAD,EAAO,SAAP,CAAnC,EAAsD,UAAU,MAAhE;AACA,QAAI,WAAW,gBAAgB,SAAhB,KAA8B,OAAO,SAAP,CAA7C;AACA,QAAI,gBAAgB,SAAhB,CAAJ,EAAgC;AAC9B;AACA,aAAO,gBAAgB,SAAhB,CAAP;AACD;;AAED,QAAI,OAAO,EAAX;AACA,WAAO,SAAP,IAAoB,CAAC,YAAY,EAAb,EAAiB,MAAjB,CAAwB,IAAxB,EAA8B,MAA9B,CAAqC,UAAU,GAAV,EAAe;AACtE,UAAI,KAAK,GAAL,CAAJ,EAAe,OAAO,KAAP;AACf,aAAQ,KAAK,GAAL,IAAY,IAApB;AACD,KAHmB,CAApB;AAIA,WAAO,IAAP;AACD,GAdD;AAeA,OAAK,SAAL,GAAiB,YAAY;AAC3B;AACA,WAAO,OAAO,MAAP,EAAe,eAAf,CAAP;AACD,GAHD;;AAKA;AACA;AACA,OAAK,GAAL,GAAW,UAAU,MAAV,EAAkB;AAC3B,YAAQ,kBAAR,EAA4B,CAAC,MAAD,CAA5B,EAAsC,UAAU,MAAhD;AACA,QAAI,WAAW,KAAf,EAAsB,QAAQ,SAAR,GAAoB,SAApB,CAAtB,KACK,QAAQ,SAAR,GAAoB,UAAU,EAA9B;AACL,WAAO,IAAP;AACD,GALD;;AAOA,OAAK,IAAL,GAAY,UAAU,IAAV,EAAgB;AAC1B,YAAQ,eAAR,EAAyB,CAAC,IAAD,CAAzB,EAAiC,UAAU,MAA3C;AACA,UAAM,IAAN,CAAW,IAAX;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,MAAI,SAAS,KAAb;AACA,MAAI,eAAe,KAAnB;AACA,OAAK,MAAL,GAAc,UAAU,MAAV,EAAkB;AAC9B,YAAQ,WAAR,EAAqB,CAAC,MAAD,CAArB,EAA+B,UAAU,MAAzC;AACA,aAAS,IAAT;AACA,mBAAe,WAAW,KAA1B;AACA,WAAO,IAAP;AACD,GALD;AAMA,OAAK,SAAL,GAAiB,YAAY;AAC3B,WAAO,MAAP;AACD,GAFD;;AAIA,OAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB;AAC/B,YAAQ,mBAAR,EAA6B,CAAC,KAAD,CAA7B,EAAsC,UAAU,MAAhD;AACA,QAAI,CAAC,KAAK,MAAV,EAAkB,KAAK,UAAL,CAAgB,WAAhB,EAFa,CAEgB;AAC/C,UAAM,QAAN,CAAe,KAAf;AACA,WAAO,IAAP;AACD,GALD;;AAOA,MAAI,aAAa,IAAjB;AACA,OAAK,OAAL,GAAe,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB;AACtC,YAAQ,8CAAR,EAAwD,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAxD,EAAyE,UAAU,MAAnF;AACA,QAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,YAAM,cAAN;AACA,YAAM,SAAN;AACD,KAHD,MAGO,IAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACjC,YAAM,GAAN;AACA,YAAM,SAAN;AACD,KAHM,MAGA,IAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACjC,YAAM,GAAN;AACA,YAAM,IAAN;AACD;;AAED,iBAAa,GAAb;AACA,UAAM,OAAO,MAAM,eAAN,CAAsB,qBAAtB,CAAb;;AAEA,UAAM,OAAN,CAAc,OAAO,SAArB;AACA,SAAK,OAAL,CAAa,UAAb;AACA,SAAK,QAAL,CAAc,UAAd,EAA0B,GAA1B;AACA,WAAO,IAAP;AACD,GApBD;;AAsBA,WAAS,YAAT,GAAyB;AACvB,QAAI,MAAM,OAAV;;AAEA,WAAO,IAAI,OAAJ,IAAe,SAAtB;AACD;;AAED,MAAI,UAAU,IAAd;AACA,MAAI,sBAAsB,KAA1B,CA1tB+C,CA0tBf;AAChC,OAAK,UAAL,GAAkB,KAAK,IAAL,GAAY,UAAU,GAAV,EAAe,GAAf,EAAoB,cAApB,EAAoC;AAChE,YAAQ,6CAAR,EAAuD,CAAC,GAAD,EAAM,GAAN,EAAW,cAAX,CAAvD,EAAmF,UAAU,MAA7F;;AAEA;AACA,QAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,4BAAsB,IAAtB;AACD,KAFD,MAEO,IAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,OAAO,GAAP,KAAe,SAAnB,EAA8B;AAC5B,8BAAsB,GAAtB;AACA,cAAM,IAAN;AACD,OAHD,MAGO;AACL,8BAAsB,IAAtB;AACD;AACF,KAPM,MAOA,IAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,OAAO,GAAP,KAAe,SAAnB,EAA8B;AAC5B,8BAAsB,GAAtB;AACA,cAAM,IAAN;AACD,OAHD,MAGO;AACL,8BAAsB,IAAtB;AACD;AACF,KAPM,MAOA;AACL,4BAAsB,QAAQ,cAAR,CAAtB;AACD;AACD;AACA,cAAU,OAAO,MAAjB;AACA,SAAK,OAAL,CAAa,OAAb;AACA,SAAK,QAAL,CAAc,OAAd,EAAuB,OAAO,MAAM,eAAN,CAAsB,WAAtB,CAA9B;AACA,WAAO,IAAP;AACD,GA5BD;;AA8BA,OAAK,cAAL,GAAsB,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAChD,YAAQ,2BAAR,EAAqC,CAAC,OAAD,EAAU,OAAV,CAArC,EAAyD,UAAU,MAAnE;AACA,UAAM,cAAN,CAAqB,OAArB,EAA8B,OAA9B;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,MAAI,cAAc,IAAlB;AACA,OAAK,WAAL,GAAmB,UAAU,OAAV,EAAmB;AACpC,YAAQ,WAAR,EAAqB,CAAC,OAAD,CAArB,EAAgC,UAAU,MAA1C;AACA,QAAI,OAAO,OAAP,KAAmB,SAAvB,EAAkC;AAChC,gBAAU,IAAV;AACD;AACD,kBAAc,OAAd;AACA,WAAO,IAAP;AACD,GAPD;AAQA,OAAK,cAAL,GAAsB,YAAY;AAChC,WAAO,WAAP;AACD,GAFD;;AAIA,MAAI,oBAAoB,IAAxB;AACA,OAAK,UAAL,GAAkB,UAAU,GAAV,EAAe,IAAf,EAAqB,EAArB,EAAyB;AACzC,YAAQ,+CAAR,EAAyD,CAAC,GAAD,EAAM,IAAN,EAAY,EAAZ,CAAzD,EAA0E,UAAU,MAApF;;AAEA;AACA;AACA;AACA,QAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAK,IAAL;AACA,aAAO,IAAP;AACD;;AAED;AACA,wBAAoB,OAAO,YAA3B;AACA,QAAI,CAAC,IAAD,IAAS,SAAS,KAAtB,EAA6B;AAC3B,aAAO,iCAAP;AACD;AACD,SAAK,OAAL,CAAa,iBAAb,EAAgC,IAAhC;;AAEA;AACA,QAAI,EAAJ,EAAQ,WAAW,gBAAX,CAA4B,EAA5B;;AAER,WAAO,IAAP;AACD,GAtBD;;AAwBA,OAAK,oBAAL,GAA4B,UAAU,EAAV,EAAc;AACxC,YAAQ,UAAR,EAAoB,CAAC,EAAD,CAApB,EAA0B,UAAU,MAApC;AACA,SAAK,MAAM,KAAK,EAAhB;AACA,YAAQ,GAAR,CAAY,WAAW,wBAAX,CAAoC,EAApC,CAAZ;AACA,WAAO,IAAP;AACD,GALD;;AAOA,OAAK,aAAL,GAAqB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AACzC,YAAQ,oBAAR,EAA8B,CAAC,IAAD,EAAO,IAAP,CAA9B,EAA4C,UAAU,MAAtD;AACA,eAAW,aAAX,CAAyB,IAAzB,EAA+B,IAA/B;AACD,GAHD;;AAKA,OAAK,MAAL,GAAc,UAAU,MAAV,EAAkB;AAC9B,YAAQ,UAAR,EAAoB,CAAC,MAAD,CAApB,EAA8B,UAAU,MAAxC;AACA,QAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACA,aAAO,KAAK,SAAL,EAAP;AACD;AACD,mBAAe,KAAf;AACA,SAAK,SAAL,CAAe,MAAf;AACA,WAAO,IAAP;AACD,GATD;;AAWA,OAAK,aAAL,GAAqB,KAAK,YAAL,GAAoB,UAAU,GAAV,EAAe;AACtD,YAAQ,UAAR,EAAoB,CAAC,GAAD,CAApB,EAA2B,UAAU,MAArC;AACA,mBAAe,KAAf;AACA,SAAK,YAAL,CAAkB,GAAlB;AACA,WAAO,IAAP;AACD,GALD;;AAOA,MAAI,eAAe,IAAnB;AACA,OAAK,YAAL,GAAoB,UAAU,MAAV,EAAkB;AACpC,YAAQ,WAAR,EAAqB,CAAC,MAAD,CAArB,EAA+B,UAAU,MAAzC;AACA,mBAAe,MAAf;AACA,WAAO,IAAP;AACD,GAJD;AAKA,OAAK,eAAL,GAAuB,YAAY;AACjC,WAAO,YAAP;AACD,GAFD;;AAIA,MAAI,YAAY,KAAhB;AACA,MAAI,YAAY,IAAhB;AACA;AACA;AACA,OAAK,IAAL,GAAY,UAAU,IAAV,EAAgB,GAAhB,EAAqB;AAC/B,gBAAY,IAAZ;AACA,gBAAY,GAAZ;AACA,QAAI,WAAJ,EAAiB,QAAQ,IAAR,CAAa,IAAb;AAClB,GAJD;;AAMA;AACA;AACA,MAAI,UAAU;AACZ,SAAK,eAAY;AACf,UAAM,OAAO,EAAb;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC;AAA2C,aAAK,IAAL,CAAU,UAAU,CAAV,CAAV;AAA3C,OACA,IAAI,CAAC,KAAK,iBAAL,EAAL,EAA+B,QAAQ,GAAR,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,IAA3B;AAC/B,kBAAY,IAAZ;AACA,UAAI,OAAO,MAAX,EAAmB,UAAU,IAAV;AACnB,gBAAU,KAAK,IAAL,CAAU,GAAV,CAAV;AACD,KARW;AASZ,WAAO,iBAAY;AACjB,UAAM,OAAO,EAAb;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC;AAA2C,aAAK,IAAL,CAAU,UAAU,CAAV,CAAV;AAA3C,OACA,IAAI,CAAC,KAAK,iBAAL,EAAL,EAA+B,QAAQ,KAAR,CAAc,KAAd,CAAoB,OAApB,EAA6B,IAA7B;AAC/B,kBAAY,IAAZ;AACA,UAAI,OAAO,MAAX,EAAmB,UAAU,IAAV;AACnB,gBAAU,KAAK,IAAL,CAAU,GAAV,CAAV;AACD;AAhBW,GAAd;AAkBA,OAAK,kBAAL,GAA0B,YAAY;AACpC,WAAO,OAAP;AACD,GAFD;AAGA;AACA;AACA,OAAK,UAAL,GAAkB,YAAY;AAC5B,WAAO,SAAP;AACD,GAFD;;AAIA,OAAK,aAAL,GAAqB,YAAY;AAC/B,gBAAY,IAAZ;AACD,GAFD;;AAIA,MAAI,iBAAJ;AACA,OAAK,iBAAL,GAAyB,UAAU,SAAV,EAAqB;AAC5C,YAAQ,WAAR,EAAqB,CAAC,SAAD,CAArB,EAAkC,UAAU,MAA5C;AACA,wBAAoB,OAAO,SAAP,KAAqB,SAArB,GAAiC,SAAjC,GAA6C,IAAjE;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,OAAK,gBAAL,GAAwB,YAAY;AAClC,WAAO,KAAP;AACD,GAFD;;AAIA,OAAK,qBAAL,GAA6B,YAAY;AACvC,WAAO,UAAP;AACD,GAFD;;AAIA,OAAK,kBAAL,GAA0B,YAAY;AACpC,WAAO,OAAP;AACD,GAFD;;AAIA,OAAK,aAAL,GAAqB,YAAY;AAC/B,YAAQ,EAAR,EAAY,CAAZ;AACA,WAAO,OAAO,QAAQ,MAAR,CAAe,OAAtB,KAAkC,WAAlC,GAAgD,QAAQ,MAAR,CAAe,OAA/D,GAAyE,IAAhF;AACD,GAHD;;AAKA,SAAO,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;AAClC,SAAK,eAAY;AACf,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACD,KAHiC;AAIlC,gBAAY;AAJsB,GAApC;;AAOA,OAAK,UAAL,GAAkB,UAAU,IAAV,EAAgB,YAAhB,EAA8B,eAA9B,EAA+C;AAC/D,QAAI,iBAAiB,CAAC,CAAC,eAAvB;AACA,WAAO,QAAQ,WAAf;;AAEA,YAAQ,EAAR,GAAa,KAAK,EAAlB;AACA,YAAQ,aAAR,GAAwB,QAAQ,OAAR,KAAoB,EAA5C;AACA,QAAM,SAAS,OAAO,QAAP,CAAgB,IAAhB,EAAsB,OAAtB,CAAf;AACA,QAAI,OAAO,OAAO,IAAlB;AACA,QAAI,YAAJ,EAAkB,OAAO,OAAO,IAAP,EAAa,YAAb,CAAP;AAClB,QAAI,UAAU,OAAO,OAArB;;AAEA,SAAK,EAAL,GAAU,KAAK,EAAf;AACA,SAAK,MAAL,GAAc,MAAd;;AAEA,QAAI;AACF,oBADE,CACY;;AAEd;AACA;AACA;AACA,UAAI,YAAJ,EAAkB;AAChB,eAAO,IAAP;AACD;;AAED,UAAI,KAAK,CAAL,CAAO,MAAX,EAAmB;AACjB;AACA;AACA,YAAI,mBAAJ,EAAyB;AACvB;AACA;AACA;AACA,cAAI,WAAW,CAAC,OAAD,EAAU,MAAV,CAAiB,QAAQ,OAAR,KAAoB,EAArC,CAAf;AACA,cAAI,oBAAoB,SAAS,MAAT,CAAgB,UAAU,CAAV,EAAa;AACnD,mBAAO,EAAE,MAAF,GAAW,CAAlB;AACD,WAFuB,CAAxB;AAGA,cAAI,kBAAkB,MAAtB,EAA8B,WAAW,iBAAX;AAC9B;AACA,eAAK,CAAL,GAAS,KAAK,CAAL,CAAO,MAAP,CAAc,UAAU,GAAV,EAAe;AACpC,gBAAI,CAAC,SAAS,OAAT,CAAiB,GAAjB,CAAL,EAA4B;AAC1B,mBAAK,OAAL,IAAgB,IAAhB;AACA,qBAAO,KAAP;AACD;AACD,mBAAO,IAAP;AACD,WANQ,CAAT;AAOD;;AAED;AACA;AACA,YAAI,cAAc,QAAQ,WAAR,EAAlB;AACA,YAAI,YAAY,MAAhB,EAAwB;AACtB,cAAI,mBAAJ;AACA,eAAK,IAAI,IAAI,CAAR,EAAW,GAAhB,EAAqB,KAAK,CAAL,CAAO,CAAP,MAAc,SAAnC,EAA8C,GAA9C,EAAmD;AACjD,kBAAM,OAAO,KAAK,CAAL,CAAO,CAAP,CAAP,CAAN;AACA,gBAAI,CAAC,YAAY,OAAZ,CAAoB,GAApB,CAAD,IAA6B,QAAQ,iBAAzC,EAA4D;AAC1D,iCAAmB,IAAnB;AACA,qBAAO,QAAQ,UAAR,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,MAA9B,CAAP;AACD,aAHD,MAGO,IAAI,CAAC,mBAAD,IAAwB,QAAQ,iBAApC,EAAuD;AAC5D,oCAAsB,GAAtB;AACD;AACF;;AAED;AACA,cAAI,QAAQ,iBAAR,MAA+B,CAAC,KAAK,OAAL,CAApC,EAAmD;AACjD,+BAAmB,IAAnB;AACA,mBAAO,QAAQ,UAAR,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,MAA/B,CAAP;AACD;;AAED;AACA;AACA,cAAI,qBAAqB,mBAAzB,EAA8C;AAC5C,uBAAW,iBAAX,CAA6B,mBAA7B,EAAkD,WAAlD;AACD;AACF;;AAED;AACA,YAAI,qBAAqB,CAAC,KAAK,CAAL,CAAO,OAAP,CAAe,iBAAf,CAAtB,IAA2D,CAAC,KAAK,WAAW,aAAhB,CAAhE,EAAgG;AAC9F,cAAI,WAAJ,EAAiB,YAAY,IAAZ;AACjB,eAAK,oBAAL;AACA,eAAK,IAAL,CAAU,CAAV;AACD;AACF,OAxDD,MAwDO,IAAI,QAAQ,iBAAR,MAA+B,CAAC,KAAK,OAAL,CAApC,EAAmD;AACxD,2BAAmB,IAAnB;AACA,eAAO,QAAQ,UAAR,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,MAA/B,CAAP;AACD;;AAED;AACA;AACA,UAAI,WAAW,aAAX,IAA4B,IAAhC,EAAsC;AACpC,YAAI,WAAJ,EAAiB,YAAY,IAAZ;;AAEjB;AACA;AACA,YAAI,iBAAiB,KAAK,KAAL,CAAW,KAAK,OAAL,CAAa,OAAO,WAAW,aAA/B,IAAgD,CAA3D,CAArB;AACA,mBAAW,aAAX,CAAyB,cAAzB,EAAyC,UAAU,WAAV,EAAuB;AAC9D,WAAC,CAAC,eAAe,EAAhB,EAAoB,OAApB,CAA4B,UAAU,UAAV,EAAsB;AACjD,oBAAQ,GAAR,CAAY,UAAZ;AACD,WAFA;;AAID,eAAK,IAAL,CAAU,CAAV;AACD,SAND;AAOA,eAAO,mBAAmB,IAAnB,CAAP;AACD;;AAED;AACA;AACA,UAAI,CAAC,SAAL,EAAgB;AACd,eAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAU,GAAV,EAAe;AACvC,cAAI,QAAQ,OAAR,IAAmB,KAAK,GAAL,CAAvB,EAAkC;AAChC,gBAAI,WAAJ,EAAiB,YAAY,IAAZ;;AAEjB,6BAAiB,IAAjB;AACA,iBAAK,QAAL,CAAc,KAAd;AACA,iBAAK,IAAL,CAAU,CAAV;AACD,WAND,MAMO,IAAI,QAAQ,UAAR,IAAsB,KAAK,GAAL,CAA1B,EAAqC;AAC1C,gBAAI,WAAJ,EAAiB,YAAY,IAAZ;;AAEjB,6BAAiB,IAAjB;AACA,kBAAM,WAAN;AACA,iBAAK,IAAL,CAAU,CAAV;AACD;AACF,SAdD;AAeD;;AAED;AACA,UAAI,CAAC,cAAD,IAAmB,QAAQ,cAAR,CAAuB,MAAvB,GAAgC,CAAvD,EAA0D;AACxD,yBAAiB,OAAO,IAAP,CAAY,IAAZ,EAAkB,IAAlB,CAAuB,UAAU,GAAV,EAAe;AACrD,iBAAO,QAAQ,cAAR,CAAuB,OAAvB,CAA+B,GAA/B,KAAuC,CAAvC,IAA4C,KAAK,GAAL,MAAc,IAAjE;AACD,SAFgB,CAAjB;AAGD;;AAED;AACA;AACA,UAAI,CAAC,cAAL,EAAqB;AACnB,YAAI,OAAO,KAAX,EAAkB,MAAM,IAAI,MAAJ,CAAW,OAAO,KAAP,CAAa,OAAxB,CAAN;;AAElB;AACA;AACA,YAAI,CAAC,KAAK,WAAW,aAAhB,CAAL,EAAqC;AACnC,eAAK,cAAL,CAAoB,IAApB,EAA0B,OAA1B,EAAmC,EAAnC,EAAuC,OAAO,KAA9C;AACD;AACF;AACF,KA/HD,CA+HE,OAAO,GAAP,EAAY;AACZ,UAAI,eAAe,MAAnB,EAA2B,MAAM,IAAN,CAAW,IAAI,OAAf,EAAwB,GAAxB,EAA3B,KACK,MAAM,GAAN;AACN;;AAED,WAAO,mBAAmB,IAAnB,CAAP;AACD,GAnJD;;AAqJA,OAAK,cAAL,GAAsB,UAAU,IAAV,EAAgB,OAAhB,EAAyB,aAAzB,EAAwC,WAAxC,EAAqD;AACzE,QAAI,WAAJ,EAAiB,MAAM,IAAI,MAAJ,CAAW,YAAY,OAAvB,CAAN;AACjB,eAAW,cAAX,CAA0B,IAA1B;AACA,eAAW,oBAAX,CAAgC,IAAhC;AACA,eAAW,iBAAX,CAA6B,IAA7B;AACA,QAAI,MAAJ,EAAY,WAAW,gBAAX,CAA4B,IAA5B,EAAkC,OAAlC,EAA2C,aAA3C;AACZ,eAAW,YAAX,CAAwB,IAAxB,EAA8B,OAA9B;AACA,eAAW,cAAX,CAA0B,IAA1B;AACA,eAAW,YAAX,CAAwB,IAAxB;AACA,eAAW,WAAX,CAAuB,IAAvB;AACD,GAVD;;AAYA,WAAS,WAAT,GAAwB;AACtB,QAAI,CAAC,YAAL,EAAmB;;AAEnB,QAAI;AACF,UAAM,WAAW,QAAQ,WAAR,CAAjB;AACA,WAAK,MAAL,CAAY,SAAS,IAAT,CAAc,EAAE,OAAO,KAAT,EAAd,CAAZ;AACD,KAHD,CAGE,OAAO,GAAP,EAAY;AACZ;AACA;AACD;AACF;;AAED,WAAS,kBAAT,CAA6B,IAA7B,EAAmC;AACjC,WAAO,IAAP,CAAY,QAAQ,GAApB,EAAyB,OAAzB,CAAiC,UAAU,GAAV,EAAe;AAC9C;AACA;AACA,UAAI,CAAC,IAAI,OAAJ,CAAY,GAAZ,CAAL,EAAuB;AACvB,UAAI,OAAO,KAAK,GAAL,CAAP,KAAqB,WAAzB,EAAsC,KAAK,GAAL,IAAY,SAAZ;AACvC,KALD;AAMA,WAAO,IAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED;AACA;AACA,SAAQ,MAAR,GAAiB,MAAjB;AACA,SAAS,MAAT,CAAiB,IAAjB,EAAuB,GAAvB,EAA4B;AAC1B,SAAO,KAAK,QAAL,CAAc,IAAd,EAAoB,GAApB,CAAP;AACD","file":"yargs-compiled.js","sourcesContent":["const argsert = require('./lib/argsert')\nconst assign = require('./lib/assign')\nconst Command = require('./lib/command')\nconst Completion = require('./lib/completion')\nconst Parser = require('yargs-parser')\nconst path = require('path')\nconst Usage = require('./lib/usage')\nconst Validation = require('./lib/validation')\nconst Y18n = require('y18n')\nconst objFilter = require('./lib/obj-filter')\nconst setBlocking = require('set-blocking')\nconst applyExtends = require('./lib/apply-extends')\nconst YError = require('./lib/yerror')\n\nvar exports = module.exports = Yargs\nfunction Yargs (processArgs, cwd, parentRequire) {\n  processArgs = processArgs || [] // handle calling yargs().\n\n  const self = {}\n  var command = null\n  var completion = null\n  var groups = {}\n  var output = ''\n  var preservedGroups = {}\n  var usage = null\n  var validation = null\n\n  const y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  })\n\n  if (!cwd) cwd = process.cwd()\n\n  self.$0 = process.argv\n    .slice(0, 2)\n    .map(function (x, i) {\n      // ignore the node bin, specify this in your\n      // bin file with #!/usr/bin/env node\n      if (i === 0 && /\\b(node|iojs)(\\.exe)?$/.test(x)) return\n      var b = rebase(cwd, x)\n      return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x\n    })\n    .join(' ').trim()\n\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(\n      path.dirname(process.execPath) + '/', ''\n    )\n  }\n\n  // use context object to keep track of resets, subcommand execution, etc\n  // submodules should modify and check the state of context as necessary\n  const context = { resets: -1, commands: [], files: [] }\n  self.getContext = function () {\n    return context\n  }\n\n  // puts yargs back into an initial state. any keys\n  // that have been set to \"global\" will not be reset\n  // by this action.\n  var options\n  self.resetOptions = self.reset = function (aliases) {\n    context.resets++\n    aliases = aliases || {}\n    options = options || {}\n    // put yargs back into an initial state, this\n    // logic is used to build a nested command\n    // hierarchy.\n    var tmpOptions = {}\n    tmpOptions.local = options.local ? options.local : []\n    tmpOptions.configObjects = options.configObjects ? options.configObjects : []\n\n    // if a key has been explicitly set as local,\n    // we should reset it before passing options to command.\n    var localLookup = {}\n    tmpOptions.local.forEach(function (l) {\n      localLookup[l] = true\n      ;(aliases[l] || []).forEach(function (a) {\n        localLookup[a] = true\n      })\n    })\n\n    // preserve all groups not set to local.\n    preservedGroups = Object.keys(groups).reduce(function (acc, groupName) {\n      var keys = groups[groupName].filter(function (key) {\n        return !(key in localLookup)\n      })\n      if (keys.length > 0) {\n        acc[groupName] = keys\n      }\n      return acc\n    }, {})\n    // groups can now be reset\n    groups = {}\n\n    var arrayOptions = [\n      'array', 'boolean', 'string', 'requiresArg', 'skipValidation',\n      'count', 'normalize', 'number'\n    ]\n\n    var objectOptions = [\n      'narg', 'key', 'alias', 'default', 'defaultDescription',\n      'config', 'choices', 'demandedOptions', 'demandedCommands', 'coerce'\n    ]\n\n    arrayOptions.forEach(function (k) {\n      tmpOptions[k] = (options[k] || []).filter(function (k) {\n        return !localLookup[k]\n      })\n    })\n\n    objectOptions.forEach(function (k) {\n      tmpOptions[k] = objFilter(options[k], function (k, v) {\n        return !localLookup[k]\n      })\n    })\n\n    tmpOptions.envPrefix = options.envPrefix\n    options = tmpOptions\n\n    // if this is the first time being executed, create\n    // instances of all our helpers -- otherwise just reset.\n    usage = usage ? usage.reset(localLookup) : Usage(self, y18n)\n    validation = validation ? validation.reset(localLookup) : Validation(self, usage, y18n)\n    command = command ? command.reset() : Command(self, usage, validation)\n    if (!completion) completion = Completion(self, usage, command)\n\n    if (!strictGlobal) strict = false\n    completionCommand = null\n    output = ''\n    exitError = null\n    hasOutput = false\n    self.parsed = false\n\n    return self\n  }\n  self.resetOptions()\n\n  // temporary hack: allow \"freezing\" of reset-able state for parse(msg, cb)\n  var frozen\n  function freeze () {\n    frozen = {}\n    frozen.options = options\n    frozen.configObjects = options.configObjects.slice(0)\n    frozen.exitProcess = exitProcess\n    frozen.groups = groups\n    usage.freeze()\n    validation.freeze()\n    command.freeze()\n    frozen.strict = strict\n    frozen.completionCommand = completionCommand\n    frozen.output = output\n    frozen.exitError = exitError\n    frozen.hasOutput = hasOutput\n    frozen.parsed = self.parsed\n  }\n  function unfreeze () {\n    options = frozen.options\n    options.configObjects = frozen.configObjects\n    exitProcess = frozen.exitProcess\n    groups = frozen.groups\n    output = frozen.output\n    exitError = frozen.exitError\n    hasOutput = frozen.hasOutput\n    self.parsed = frozen.parsed\n    usage.unfreeze()\n    validation.unfreeze()\n    command.unfreeze()\n    strict = frozen.strict\n    completionCommand = frozen.completionCommand\n    parseFn = null\n    parseContext = null\n    frozen = undefined\n  }\n\n  self.boolean = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('boolean', keys)\n    return self\n  }\n\n  self.array = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('array', keys)\n    return self\n  }\n\n  self.number = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('number', keys)\n    return self\n  }\n\n  self.normalize = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('normalize', keys)\n    return self\n  }\n\n  self.count = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('count', keys)\n    return self\n  }\n\n  self.string = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('string', keys)\n    return self\n  }\n\n  self.requiresArg = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('requiresArg', keys)\n    return self\n  }\n\n  self.skipValidation = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('skipValidation', keys)\n    return self\n  }\n\n  function populateParserHintArray (type, keys, value) {\n    keys = [].concat(keys)\n    keys.forEach(function (key) {\n      options[type].push(key)\n    })\n  }\n\n  self.nargs = function (key, value) {\n    argsert('<string|object|array> [number]', [key, value], arguments.length)\n    populateParserHintObject(self.nargs, false, 'narg', key, value)\n    return self\n  }\n\n  self.choices = function (key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length)\n    populateParserHintObject(self.choices, true, 'choices', key, value)\n    return self\n  }\n\n  self.alias = function (key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length)\n    populateParserHintObject(self.alias, true, 'alias', key, value)\n    return self\n  }\n\n  // TODO: actually deprecate self.defaults.\n  self.default = self.defaults = function (key, value, defaultDescription) {\n    argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length)\n    if (defaultDescription) options.defaultDescription[key] = defaultDescription\n    if (typeof value === 'function') {\n      if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value)\n      value = value.call()\n    }\n    populateParserHintObject(self.default, false, 'default', key, value)\n    return self\n  }\n\n  self.describe = function (key, desc) {\n    argsert('<object|string|array> [string]', [key, desc], arguments.length)\n    populateParserHintObject(self.describe, false, 'key', key, true)\n    usage.describe(key, desc)\n    return self\n  }\n\n  self.demandOption = function (keys, msg) {\n    argsert('<object|string|array> [string]', [keys, msg], arguments.length)\n    populateParserHintObject(self.demandOption, false, 'demandedOptions', keys, msg)\n    return self\n  }\n\n  self.coerce = function (keys, value) {\n    argsert('<object|string|array> [function]', [keys, value], arguments.length)\n    populateParserHintObject(self.coerce, false, 'coerce', keys, value)\n    return self\n  }\n\n  function populateParserHintObject (builder, isArray, type, key, value) {\n    if (Array.isArray(key)) {\n      // an array of keys with one value ['x', 'y', 'z'], function parse () {}\n      var temp = {}\n      key.forEach(function (k) {\n        temp[k] = value\n      })\n      builder(temp)\n    } else if (typeof key === 'object') {\n      // an object of key value pairs: {'x': parse () {}, 'y': parse() {}}\n      Object.keys(key).forEach(function (k) {\n        builder(k, key[k])\n      })\n    } else {\n      // a single key value pair 'x', parse() {}\n      if (isArray) {\n        options[type][key] = (options[type][key] || []).concat(value)\n      } else {\n        options[type][key] = value\n      }\n    }\n  }\n\n  self.config = function (key, msg, parseFn) {\n    argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length)\n    // allow a config object to be provided directly.\n    if (typeof key === 'object') {\n      key = applyExtends(key, cwd)\n      options.configObjects = (options.configObjects || []).concat(key)\n      return self\n    }\n\n    // allow for a custom parsing function.\n    if (typeof msg === 'function') {\n      parseFn = msg\n      msg = null\n    }\n\n    key = key || 'config'\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'))\n    ;(Array.isArray(key) ? key : [key]).forEach(function (k) {\n      options.config[k] = parseFn || true\n    })\n\n    return self\n  }\n\n  self.example = function (cmd, description) {\n    argsert('<string> [string]', [cmd, description], arguments.length)\n    usage.example(cmd, description)\n    return self\n  }\n\n  self.command = function (cmd, description, builder, handler) {\n    argsert('<string|array|object> [string|boolean] [function|object] [function]', [cmd, description, builder, handler], arguments.length)\n    command.addHandler(cmd, description, builder, handler)\n    return self\n  }\n\n  self.commandDir = function (dir, opts) {\n    argsert('<string> [object]', [dir, opts], arguments.length)\n    const req = parentRequire || require\n    command.addDirectory(dir, self.getContext(), req, require('get-caller-file')(), opts)\n    return self\n  }\n\n  // TODO: deprecate self.demand in favor of\n  // .demandCommand() .demandOption().\n  self.demand = self.required = self.require = function (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n    if (Array.isArray(max)) {\n      max.forEach(function (key) {\n        self.demandOption(key, msg)\n      })\n      max = Infinity\n    } else if (typeof max !== 'number') {\n      msg = max\n      max = Infinity\n    }\n\n    if (typeof keys === 'number') {\n      self.demandCommand(keys, max, msg, msg)\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demandOption(key, msg)\n      })\n    } else {\n      if (typeof msg === 'string') {\n        self.demandOption(keys, msg)\n      } else if (msg === true || typeof msg === 'undefined') {\n        self.demandOption(keys)\n      }\n    }\n\n    return self\n  }\n\n  self.demandCommand = function (min, max, minMsg, maxMsg) {\n    argsert('[number] [number|string] [string|null] [string|null]', [min, max, minMsg, maxMsg], arguments.length)\n\n    if (typeof min === 'undefined') min = 1\n\n    if (typeof max !== 'number') {\n      minMsg = max\n      max = Infinity\n    }\n\n    self.global('_', false)\n\n    options.demandedCommands._ = {\n      min: min,\n      max: max,\n      minMsg: minMsg,\n      maxMsg: maxMsg\n    }\n\n    return self\n  }\n\n  self.getDemandedOptions = function () {\n    argsert([], 0)\n    return options.demandedOptions\n  }\n\n  self.getDemandedCommands = function () {\n    argsert([], 0)\n    return options.demandedCommands\n  }\n\n  self.implies = function (key, value) {\n    argsert('<string|object> [string]', [key, value], arguments.length)\n    validation.implies(key, value)\n    return self\n  }\n\n  self.conflicts = function (key1, key2) {\n    argsert('<string|object> [string]', [key1, key2], arguments.length)\n    validation.conflicts(key1, key2)\n    return self\n  }\n\n  self.usage = function (msg, opts) {\n    argsert('<string|null|object> [object]', [msg, opts], arguments.length)\n\n    if (!opts && typeof msg === 'object') {\n      opts = msg\n      msg = null\n    }\n\n    usage.usage(msg)\n\n    if (opts) self.options(opts)\n\n    return self\n  }\n\n  self.epilogue = self.epilog = function (msg) {\n    argsert('<string>', [msg], arguments.length)\n    usage.epilog(msg)\n    return self\n  }\n\n  self.fail = function (f) {\n    argsert('<function>', [f], arguments.length)\n    usage.failFn(f)\n    return self\n  }\n\n  self.check = function (f, _global) {\n    argsert('<function> [boolean]', [f, _global], arguments.length)\n    validation.check(f, _global !== false)\n    return self\n  }\n\n  self.global = function (globals, global) {\n    argsert('<string|array> [boolean]', [globals, global], arguments.length)\n    globals = [].concat(globals)\n    if (global !== false) {\n      options.local = options.local.filter(function (l) {\n        return globals.indexOf(l) === -1\n      })\n    } else {\n      globals.forEach(function (g) {\n        if (options.local.indexOf(g) === -1) options.local.push(g)\n      })\n    }\n    return self\n  }\n\n  self.pkgConf = function (key, path) {\n    argsert('<string> [string]', [key, path], arguments.length)\n    var conf = null\n    // prefer cwd to require-main-filename in this method\n    // since we're looking for e.g. \"nyc\" config in nyc consumer\n    // rather than \"yargs\" config in nyc (where nyc is the main filename)\n    var obj = pkgUp(path || cwd)\n\n    // If an object exists in the key, add it to options.configObjects\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = applyExtends(obj[key], path || cwd, key)\n      options.configObjects = (options.configObjects || []).concat(conf)\n    }\n\n    return self\n  }\n\n  var pkgs = {}\n  function pkgUp (path) {\n    var npath = path || '*'\n    if (pkgs[npath]) return pkgs[npath]\n    const readPkgUp = require('read-pkg-up')\n\n    var obj = {}\n    try {\n      obj = readPkgUp.sync({\n        cwd: path || require('require-main-filename')(parentRequire || require),\n        normalize: false\n      })\n    } catch (noop) {}\n\n    pkgs[npath] = obj.pkg || {}\n    return pkgs[npath]\n  }\n\n  var parseFn = null\n  var parseContext = null\n  self.parse = function (args, shortCircuit, _parseFn) {\n    argsert('<string|array> [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length)\n\n    // a context object can optionally be provided, this allows\n    // additional information to be passed to a command handler.\n    if (typeof shortCircuit === 'object') {\n      parseContext = shortCircuit\n      shortCircuit = _parseFn\n    }\n\n    // by providing a function as a second argument to\n    // parse you can capture output that would otherwise\n    // default to printing to stdout/stderr.\n    if (typeof shortCircuit === 'function') {\n      parseFn = shortCircuit\n      shortCircuit = null\n    }\n    // completion short-circuits the parsing process,\n    // skipping validation, etc.\n    if (!shortCircuit) processArgs = args\n\n    freeze()\n    if (parseFn) exitProcess = false\n\n    var parsed = self._parseArgs(args, shortCircuit)\n    if (parseFn) parseFn(exitError, parsed, output)\n    unfreeze()\n\n    return parsed\n  }\n\n  self._getParseContext = function () {\n    return parseContext || {}\n  }\n\n  self._hasParseCallback = function () {\n    return !!parseFn\n  }\n\n  self.option = self.options = function (key, opt) {\n    argsert('<string|object> [object]', [key, opt], arguments.length)\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k])\n      })\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {}\n      }\n\n      options.key[key] = true // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias)\n\n      var demand = opt.demand || opt.required || opt.require\n\n      // deprecated, use 'demandOption' instead\n      if (demand) {\n        self.demand(key, demand)\n      }\n\n      if (opt.demandOption) {\n        self.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined)\n      }\n\n      if ('config' in opt) {\n        self.config(key, opt.configParser)\n      }\n\n      if ('conflicts' in opt) {\n        self.conflicts(key, opt.conflicts)\n      }\n\n      if ('default' in opt) {\n        self.default(key, opt.default)\n      }\n\n      if ('implies' in opt) {\n        self.implies(key, opt.implies)\n      }\n\n      if ('nargs' in opt) {\n        self.nargs(key, opt.nargs)\n      }\n\n      if ('normalize' in opt) {\n        self.normalize(key)\n      }\n\n      if ('choices' in opt) {\n        self.choices(key, opt.choices)\n      }\n\n      if ('coerce' in opt) {\n        self.coerce(key, opt.coerce)\n      }\n\n      if ('group' in opt) {\n        self.group(key, opt.group)\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key)\n        if (opt.alias) self.boolean(opt.alias)\n      }\n\n      if (opt.array || opt.type === 'array') {\n        self.array(key)\n        if (opt.alias) self.array(opt.alias)\n      }\n\n      if (opt.number || opt.type === 'number') {\n        self.number(key)\n        if (opt.alias) self.number(opt.alias)\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key)\n        if (opt.alias) self.string(opt.alias)\n      }\n\n      if (opt.count || opt.type === 'count') {\n        self.count(key)\n      }\n\n      if (typeof opt.global === 'boolean') {\n        self.global(key, opt.global)\n      }\n\n      if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription\n      }\n\n      if (opt.skipValidation) {\n        self.skipValidation(key)\n      }\n\n      var desc = opt.describe || opt.description || opt.desc\n      if (desc) {\n        self.describe(key, desc)\n      }\n\n      if (opt.requiresArg) {\n        self.requiresArg(key)\n      }\n    }\n\n    return self\n  }\n  self.getOptions = function () {\n    return options\n  }\n\n  self.group = function (opts, groupName) {\n    argsert('<string|array> <string>', [opts, groupName], arguments.length)\n    var existing = preservedGroups[groupName] || groups[groupName]\n    if (preservedGroups[groupName]) {\n      // we now only need to track this group name in groups.\n      delete preservedGroups[groupName]\n    }\n\n    var seen = {}\n    groups[groupName] = (existing || []).concat(opts).filter(function (key) {\n      if (seen[key]) return false\n      return (seen[key] = true)\n    })\n    return self\n  }\n  self.getGroups = function () {\n    // combine explicit and preserved groups. explicit groups should be first\n    return assign(groups, preservedGroups)\n  }\n\n  // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n  self.env = function (prefix) {\n    argsert('[string|boolean]', [prefix], arguments.length)\n    if (prefix === false) options.envPrefix = undefined\n    else options.envPrefix = prefix || ''\n    return self\n  }\n\n  self.wrap = function (cols) {\n    argsert('<number|null>', [cols], arguments.length)\n    usage.wrap(cols)\n    return self\n  }\n\n  var strict = false\n  var strictGlobal = false\n  self.strict = function (global) {\n    argsert('[boolean]', [global], arguments.length)\n    strict = true\n    strictGlobal = global !== false\n    return self\n  }\n  self.getStrict = function () {\n    return strict\n  }\n\n  self.showHelp = function (level) {\n    argsert('[string|function]', [level], arguments.length)\n    if (!self.parsed) self._parseArgs(processArgs) // run parser, if it has not already been executed.\n    usage.showHelp(level)\n    return self\n  }\n\n  var versionOpt = null\n  self.version = function (opt, msg, ver) {\n    argsert('[string|function] [string|function] [string]', [opt, msg, ver], arguments.length)\n    if (arguments.length === 0) {\n      ver = guessVersion()\n      opt = 'version'\n    } else if (arguments.length === 1) {\n      ver = opt\n      opt = 'version'\n    } else if (arguments.length === 2) {\n      ver = msg\n      msg = null\n    }\n\n    versionOpt = opt\n    msg = msg || usage.deferY18nLookup('Show version number')\n\n    usage.version(ver || undefined)\n    self.boolean(versionOpt)\n    self.describe(versionOpt, msg)\n    return self\n  }\n\n  function guessVersion () {\n    var obj = pkgUp()\n\n    return obj.version || 'unknown'\n  }\n\n  var helpOpt = null\n  var useHelpOptAsCommand = false // a call to .help() will enable this\n  self.addHelpOpt = self.help = function (opt, msg, addImplicitCmd) {\n    argsert('[string|boolean] [string|boolean] [boolean]', [opt, msg, addImplicitCmd], arguments.length)\n\n    // argument shuffle\n    if (arguments.length === 0) {\n      useHelpOptAsCommand = true\n    } else if (arguments.length === 1) {\n      if (typeof opt === 'boolean') {\n        useHelpOptAsCommand = opt\n        opt = null\n      } else {\n        useHelpOptAsCommand = true\n      }\n    } else if (arguments.length === 2) {\n      if (typeof msg === 'boolean') {\n        useHelpOptAsCommand = msg\n        msg = null\n      } else {\n        useHelpOptAsCommand = true\n      }\n    } else {\n      useHelpOptAsCommand = Boolean(addImplicitCmd)\n    }\n    // use arguments, fallback to defaults for opt and msg\n    helpOpt = opt || 'help'\n    self.boolean(helpOpt)\n    self.describe(helpOpt, msg || usage.deferY18nLookup('Show help'))\n    return self\n  }\n\n  self.showHelpOnFail = function (enabled, message) {\n    argsert('[boolean|string] [string]', [enabled, message], arguments.length)\n    usage.showHelpOnFail(enabled, message)\n    return self\n  }\n\n  var exitProcess = true\n  self.exitProcess = function (enabled) {\n    argsert('[boolean]', [enabled], arguments.length)\n    if (typeof enabled !== 'boolean') {\n      enabled = true\n    }\n    exitProcess = enabled\n    return self\n  }\n  self.getExitProcess = function () {\n    return exitProcess\n  }\n\n  var completionCommand = null\n  self.completion = function (cmd, desc, fn) {\n    argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length)\n\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc\n      desc = null\n    }\n\n    // register the completion command.\n    completionCommand = cmd || 'completion'\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script'\n    }\n    self.command(completionCommand, desc)\n\n    // a function can be provided\n    if (fn) completion.registerFunction(fn)\n\n    return self\n  }\n\n  self.showCompletionScript = function ($0) {\n    argsert('[string]', [$0], arguments.length)\n    $0 = $0 || self.$0\n    _logger.log(completion.generateCompletionScript($0))\n    return self\n  }\n\n  self.getCompletion = function (args, done) {\n    argsert('<array> <function>', [args, done], arguments.length)\n    completion.getCompletion(args, done)\n  }\n\n  self.locale = function (locale) {\n    argsert('[string]', [locale], arguments.length)\n    if (arguments.length === 0) {\n      guessLocale()\n      return y18n.getLocale()\n    }\n    detectLocale = false\n    y18n.setLocale(locale)\n    return self\n  }\n\n  self.updateStrings = self.updateLocale = function (obj) {\n    argsert('<object>', [obj], arguments.length)\n    detectLocale = false\n    y18n.updateLocale(obj)\n    return self\n  }\n\n  var detectLocale = true\n  self.detectLocale = function (detect) {\n    argsert('<boolean>', [detect], arguments.length)\n    detectLocale = detect\n    return self\n  }\n  self.getDetectLocale = function () {\n    return detectLocale\n  }\n\n  var hasOutput = false\n  var exitError = null\n  // maybe exit, always capture\n  // context about why we wanted to exit.\n  self.exit = function (code, err) {\n    hasOutput = true\n    exitError = err\n    if (exitProcess) process.exit(code)\n  }\n\n  // we use a custom logger that buffers output,\n  // so that we can print to non-CLIs, e.g., chat-bots.\n  var _logger = {\n    log: function () {\n      const args = []\n      for (var i = 0; i < arguments.length; i++) args.push(arguments[i])\n      if (!self._hasParseCallback()) console.log.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    },\n    error: function () {\n      const args = []\n      for (var i = 0; i < arguments.length; i++) args.push(arguments[i])\n      if (!self._hasParseCallback()) console.error.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    }\n  }\n  self._getLoggerInstance = function () {\n    return _logger\n  }\n  // has yargs output an error our help\n  // message in the current execution context.\n  self._hasOutput = function () {\n    return hasOutput\n  }\n\n  self._setHasOutput = function () {\n    hasOutput = true\n  }\n\n  var recommendCommands\n  self.recommendCommands = function (recommend) {\n    argsert('[boolean]', [recommend], arguments.length)\n    recommendCommands = typeof recommend === 'boolean' ? recommend : true\n    return self\n  }\n\n  self.getUsageInstance = function () {\n    return usage\n  }\n\n  self.getValidationInstance = function () {\n    return validation\n  }\n\n  self.getCommandInstance = function () {\n    return command\n  }\n\n  self.terminalWidth = function () {\n    argsert([], 0)\n    return typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  }\n\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      return self._parseArgs(processArgs)\n    },\n    enumerable: true\n  })\n\n  self._parseArgs = function (args, shortCircuit, _skipValidation) {\n    var skipValidation = !!_skipValidation\n    args = args || processArgs\n\n    options.__ = y18n.__\n    options.configuration = pkgUp()['yargs'] || {}\n    const parsed = Parser.detailed(args, options)\n    var argv = parsed.argv\n    if (parseContext) argv = assign(argv, parseContext)\n    var aliases = parsed.aliases\n\n    argv.$0 = self.$0\n    self.parsed = parsed\n\n    try {\n      guessLocale() // guess locale lazily, so that it can be turned off in chain.\n\n      // while building up the argv object, there\n      // are two passes through the parser. If completion\n      // is being performed short-circuit on the first pass.\n      if (shortCircuit) {\n        return argv\n      }\n\n      if (argv._.length) {\n        // check for helpOpt in argv._ before running commands\n        // assumes helpOpt must be valid if useHelpOptAsCommand is true\n        if (useHelpOptAsCommand) {\n          // consider any multi-char helpOpt alias as a valid help command\n          // unless all helpOpt aliases are single-char\n          // note that parsed.aliases is a normalized bidirectional map :)\n          var helpCmds = [helpOpt].concat(aliases[helpOpt] || [])\n          var multiCharHelpCmds = helpCmds.filter(function (k) {\n            return k.length > 1\n          })\n          if (multiCharHelpCmds.length) helpCmds = multiCharHelpCmds\n          // look for and strip any helpCmds from argv._\n          argv._ = argv._.filter(function (cmd) {\n            if (~helpCmds.indexOf(cmd)) {\n              argv[helpOpt] = true\n              return false\n            }\n            return true\n          })\n        }\n\n        // if there's a handler associated with a\n        // command defer processing to it.\n        var handlerKeys = command.getCommands()\n        if (handlerKeys.length) {\n          var firstUnknownCommand\n          for (var i = 0, cmd; argv._[i] !== undefined; i++) {\n            cmd = String(argv._[i])\n            if (~handlerKeys.indexOf(cmd) && cmd !== completionCommand) {\n              setPlaceholderKeys(argv)\n              return command.runCommand(cmd, self, parsed)\n            } else if (!firstUnknownCommand && cmd !== completionCommand) {\n              firstUnknownCommand = cmd\n            }\n          }\n\n          // run the default command, if defined\n          if (command.hasDefaultCommand() && !argv[helpOpt]) {\n            setPlaceholderKeys(argv)\n            return command.runCommand(null, self, parsed)\n          }\n\n          // recommend a command if recommendCommands() has\n          // been enabled, and no commands were found to execute\n          if (recommendCommands && firstUnknownCommand) {\n            validation.recommendCommands(firstUnknownCommand, handlerKeys)\n          }\n        }\n\n        // generate a completion script for adding to ~/.bashrc.\n        if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n          if (exitProcess) setBlocking(true)\n          self.showCompletionScript()\n          self.exit(0)\n        }\n      } else if (command.hasDefaultCommand() && !argv[helpOpt]) {\n        setPlaceholderKeys(argv)\n        return command.runCommand(null, self, parsed)\n      }\n\n      // we must run completions first, a user might\n      // want to complete the --help or --version option.\n      if (completion.completionKey in argv) {\n        if (exitProcess) setBlocking(true)\n\n        // we allow for asynchronous completions,\n        // e.g., loading in a list of commands from an API.\n        var completionArgs = args.slice(args.indexOf('--' + completion.completionKey) + 1)\n        completion.getCompletion(completionArgs, function (completions) {\n          ;(completions || []).forEach(function (completion) {\n            _logger.log(completion)\n          })\n\n          self.exit(0)\n        })\n        return setPlaceholderKeys(argv)\n      }\n\n      // Handle 'help' and 'version' options\n      // if we haven't already output help!\n      if (!hasOutput) {\n        Object.keys(argv).forEach(function (key) {\n          if (key === helpOpt && argv[key]) {\n            if (exitProcess) setBlocking(true)\n\n            skipValidation = true\n            self.showHelp('log')\n            self.exit(0)\n          } else if (key === versionOpt && argv[key]) {\n            if (exitProcess) setBlocking(true)\n\n            skipValidation = true\n            usage.showVersion()\n            self.exit(0)\n          }\n        })\n      }\n\n      // Check if any of the options to skip validation were provided\n      if (!skipValidation && options.skipValidation.length > 0) {\n        skipValidation = Object.keys(argv).some(function (key) {\n          return options.skipValidation.indexOf(key) >= 0 && argv[key] === true\n        })\n      }\n\n      // If the help or version options where used and exitProcess is false,\n      // or if explicitly skipped, we won't run validations.\n      if (!skipValidation) {\n        if (parsed.error) throw new YError(parsed.error.message)\n\n        // if we're executed via bash completion, don't\n        // bother with validation.\n        if (!argv[completion.completionKey]) {\n          self._runValidation(argv, aliases, {}, parsed.error)\n        }\n      }\n    } catch (err) {\n      if (err instanceof YError) usage.fail(err.message, err)\n      else throw err\n    }\n\n    return setPlaceholderKeys(argv)\n  }\n\n  self._runValidation = function (argv, aliases, positionalMap, parseErrors) {\n    if (parseErrors) throw new YError(parseErrors.message)\n    validation.nonOptionCount(argv)\n    validation.missingArgumentValue(argv)\n    validation.requiredArguments(argv)\n    if (strict) validation.unknownArguments(argv, aliases, positionalMap)\n    validation.customChecks(argv, aliases)\n    validation.limitedChoices(argv)\n    validation.implications(argv)\n    validation.conflicting(argv)\n  }\n\n  function guessLocale () {\n    if (!detectLocale) return\n\n    try {\n      const osLocale = require('os-locale')\n      self.locale(osLocale.sync({ spawn: false }))\n    } catch (err) {\n      // if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n\n  function setPlaceholderKeys (argv) {\n    Object.keys(options.key).forEach(function (key) {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return\n      if (typeof argv[key] === 'undefined') argv[key] = undefined\n    })\n    return argv\n  }\n\n  return self\n}\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase\nfunction rebase (base, dir) {\n  return path.relative(base, dir)\n}\n"]}