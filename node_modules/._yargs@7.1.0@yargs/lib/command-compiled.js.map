{"version":3,"sources":["../../sass-graph/node_modules/yargs/lib/command.js"],"names":[],"mappings":"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","file":"command-compiled.js","sourcesContent":["const path = require('path')\nconst inspect = require('util').inspect\nconst camelCase = require('camelcase')\n\nconst DEFAULT_MARKER = '*'\n\n// handles parsing positional arguments,\n// and populating argv with said positional\n// arguments.\nmodule.exports = function (yargs, usage, validation) {\n  const self = {}\n\n  var handlers = {}\n  var aliasMap = {}\n  var defaultCommand\n  self.addHandler = function (cmd, description, builder, handler) {\n    var aliases = []\n    if (Array.isArray(cmd)) {\n      aliases = cmd.slice(1)\n      cmd = cmd[0]\n    } else if (typeof cmd === 'object') {\n      var command = (Array.isArray(cmd.command) || typeof cmd.command === 'string') ? cmd.command : moduleName(cmd)\n      if (cmd.aliases) command = [].concat(command).concat(cmd.aliases)\n      self.addHandler(command, extractDesc(cmd), cmd.builder, cmd.handler)\n      return\n    }\n\n    // allow a module to be provided instead of separate builder and handler\n    if (typeof builder === 'object' && builder.builder && typeof builder.handler === 'function') {\n      self.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler)\n      return\n    }\n\n    // parse positionals out of cmd string\n    var parsedCommand = self.parseCommand(cmd)\n\n    // remove positional args from aliases only\n    aliases = aliases.map(function (alias) {\n      return self.parseCommand(alias).cmd\n    })\n\n    // check for default and filter out '*''\n    var isDefault = false\n    var parsedAliases = [parsedCommand.cmd].concat(aliases).filter(function (c) {\n      if (c === DEFAULT_MARKER) {\n        isDefault = true\n        return false\n      }\n      return true\n    })\n\n    // short-circuit if default with no aliases\n    if (isDefault && parsedAliases.length === 0) {\n      defaultCommand = {\n        original: cmd.replace(DEFAULT_MARKER, '').trim(),\n        handler: handler,\n        builder: builder || {},\n        demanded: parsedCommand.demanded,\n        optional: parsedCommand.optional\n      }\n      return\n    }\n\n    // shift cmd and aliases after filtering out '*'\n    if (isDefault) {\n      parsedCommand.cmd = parsedAliases[0]\n      aliases = parsedAliases.slice(1)\n      cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd)\n    }\n\n    // populate aliasMap\n    aliases.forEach(function (alias) {\n      aliasMap[alias] = parsedCommand.cmd\n    })\n\n    if (description !== false) {\n      usage.command(cmd, description, isDefault, aliases)\n    }\n\n    handlers[parsedCommand.cmd] = {\n      original: cmd,\n      handler: handler,\n      builder: builder || {},\n      demanded: parsedCommand.demanded,\n      optional: parsedCommand.optional\n    }\n\n    if (isDefault) defaultCommand = handlers[parsedCommand.cmd]\n  }\n\n  self.addDirectory = function (dir, context, req, callerFile, opts) {\n    opts = opts || {}\n    // disable recursion to support nested directories of subcommands\n    if (typeof opts.recurse !== 'boolean') opts.recurse = false\n    // exclude 'json', 'coffee' from require-directory defaults\n    if (!Array.isArray(opts.extensions)) opts.extensions = ['js']\n    // allow consumer to define their own visitor function\n    const parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) { return o }\n    // call addHandler via visitor function\n    opts.visit = function (obj, joined, filename) {\n      const visited = parentVisit(obj, joined, filename)\n      // allow consumer to skip modules with their own visitor\n      if (visited) {\n        // check for cyclic reference\n        // each command file path should only be seen once per execution\n        if (~context.files.indexOf(joined)) return visited\n        // keep track of visited files in context.files\n        context.files.push(joined)\n        self.addHandler(visited)\n      }\n      return visited\n    }\n    require('require-directory')({ require: req, filename: callerFile }, dir, opts)\n  }\n\n  // lookup module object from require()d command and derive name\n  // if module was not require()d and no name given, throw error\n  function moduleName (obj) {\n    const mod = require('which-module')(obj)\n    if (!mod) throw new Error('No command name given for module: ' + inspect(obj))\n    return commandFromFilename(mod.filename)\n  }\n\n  // derive command name from filename\n  function commandFromFilename (filename) {\n    return path.basename(filename, path.extname(filename))\n  }\n\n  function extractDesc (obj) {\n    for (var keys = ['describe', 'description', 'desc'], i = 0, l = keys.length, test; i < l; i++) {\n      test = obj[keys[i]]\n      if (typeof test === 'string' || typeof test === 'boolean') return test\n    }\n    return false\n  }\n\n  self.parseCommand = function (cmd) {\n    var extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ')\n    var splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/)\n    var bregex = /\\.*[\\][<>]/g\n    var parsedCommand = {\n      cmd: (splitCommand.shift()).replace(bregex, ''),\n      demanded: [],\n      optional: []\n    }\n    splitCommand.forEach(function (cmd, i) {\n      var variadic = false\n      cmd = cmd.replace(/\\s/g, '')\n      if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true\n      if (/^\\[/.test(cmd)) {\n        parsedCommand.optional.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      } else {\n        parsedCommand.demanded.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      }\n    })\n    return parsedCommand\n  }\n\n  self.getCommands = function () {\n    return Object.keys(handlers).concat(Object.keys(aliasMap))\n  }\n\n  self.getCommandHandlers = function () {\n    return handlers\n  }\n\n  self.hasDefaultCommand = function () {\n    return !!defaultCommand\n  }\n\n  self.runCommand = function (command, yargs, parsed) {\n    var aliases = parsed.aliases\n    var commandHandler = handlers[command] || handlers[aliasMap[command]] || defaultCommand\n    var currentContext = yargs.getContext()\n    var numFiles = currentContext.files.length\n    var parentCommands = currentContext.commands.slice()\n\n    // what does yargs look like after the buidler is run?\n    var innerArgv = parsed.argv\n    var innerYargs = null\n    var positionalMap = {}\n\n    if (command) currentContext.commands.push(command)\n    if (typeof commandHandler.builder === 'function') {\n      // a function can be provided, which builds\n      // up a yargs chain and possibly returns it.\n      innerYargs = commandHandler.builder(yargs.reset(parsed.aliases))\n      // if the builder function did not yet parse argv with reset yargs\n      // and did not explicitly set a usage() string, then apply the\n      // original command string as usage() for consistent behavior with\n      // options object below.\n      if (yargs.parsed === false) {\n        if (typeof yargs.getUsageInstance().getUsage() === 'undefined') {\n          yargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n        }\n        innerArgv = innerYargs ? innerYargs._parseArgs(null, null, true) : yargs._parseArgs(null, null, true)\n      } else {\n        innerArgv = yargs.parsed.argv\n      }\n\n      if (innerYargs && yargs.parsed === false) aliases = innerYargs.parsed.aliases\n      else aliases = yargs.parsed.aliases\n    } else if (typeof commandHandler.builder === 'object') {\n      // as a short hand, an object can instead be provided, specifying\n      // the options that a command takes.\n      innerYargs = yargs.reset(parsed.aliases)\n      innerYargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n      Object.keys(commandHandler.builder).forEach(function (key) {\n        innerYargs.option(key, commandHandler.builder[key])\n      })\n      innerArgv = innerYargs._parseArgs(null, null, true)\n      aliases = innerYargs.parsed.aliases\n    }\n\n    if (!yargs._hasOutput()) {\n      positionalMap = populatePositionals(commandHandler, innerArgv, currentContext, yargs)\n    }\n\n    // we apply validation post-hoc, so that custom\n    // checks get passed populated positional arguments.\n    if (!yargs._hasOutput()) yargs._runValidation(innerArgv, aliases, positionalMap, yargs.parsed.error)\n\n    if (commandHandler.handler && !yargs._hasOutput()) {\n      yargs._setHasOutput()\n      commandHandler.handler(innerArgv)\n    }\n\n    if (command) currentContext.commands.pop()\n    numFiles = currentContext.files.length - numFiles\n    if (numFiles > 0) currentContext.files.splice(numFiles * -1, numFiles)\n\n    return innerArgv\n  }\n\n  // transcribe all positional arguments \"command <foo> <bar> [apple]\"\n  // onto argv.\n  function populatePositionals (commandHandler, argv, context, yargs) {\n    argv._ = argv._.slice(context.commands.length) // nuke the current commands\n    var demanded = commandHandler.demanded.slice(0)\n    var optional = commandHandler.optional.slice(0)\n    var positionalMap = {}\n\n    validation.positionalCount(demanded.length, argv._.length)\n\n    while (demanded.length) {\n      var demand = demanded.shift()\n      populatePositional(demand, argv, yargs, positionalMap)\n    }\n\n    while (optional.length) {\n      var maybe = optional.shift()\n      populatePositional(maybe, argv, yargs, positionalMap)\n    }\n\n    argv._ = context.commands.concat(argv._)\n    return positionalMap\n  }\n\n  // populate a single positional argument and its\n  // aliases onto argv.\n  function populatePositional (positional, argv, yargs, positionalMap) {\n    // \"positional\" consists of the positional.cmd, an array representing\n    // the positional's name and aliases, and positional.variadic\n    // indicating whether or not it is a variadic array.\n    var variadics = null\n    var value = null\n    for (var i = 0, cmd; (cmd = positional.cmd[i]) !== undefined; i++) {\n      if (positional.variadic) {\n        if (variadics) argv[cmd] = variadics.slice(0)\n        else argv[cmd] = variadics = argv._.splice(0)\n      } else {\n        if (!value && !argv._.length) continue\n        if (value) argv[cmd] = value\n        else argv[cmd] = value = argv._.shift()\n      }\n      positionalMap[cmd] = true\n      postProcessPositional(yargs, argv, cmd)\n      addCamelCaseExpansions(argv, cmd)\n    }\n  }\n\n  // TODO move positional arg logic to yargs-parser and remove this duplication\n  function postProcessPositional (yargs, argv, key) {\n    var coerce = yargs.getOptions().coerce[key]\n    if (typeof coerce === 'function') {\n      try {\n        argv[key] = coerce(argv[key])\n      } catch (err) {\n        yargs.getUsageInstance().fail(err.message, err)\n      }\n    }\n  }\n\n  function addCamelCaseExpansions (argv, option) {\n    if (/-/.test(option)) {\n      const cc = camelCase(option)\n      if (typeof argv[option] === 'object') argv[cc] = argv[option].slice(0)\n      else argv[cc] = argv[option]\n    }\n  }\n\n  self.reset = function () {\n    handlers = {}\n    aliasMap = {}\n    defaultCommand = undefined\n    return self\n  }\n\n  // used by yargs.parse() to freeze\n  // the state of commands such that\n  // we can apply .parse() multiple times\n  // with the same yargs instance.\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.handlers = handlers\n    frozen.aliasMap = aliasMap\n    frozen.defaultCommand = defaultCommand\n  }\n  self.unfreeze = function () {\n    handlers = frozen.handlers\n    aliasMap = frozen.aliasMap\n    defaultCommand = frozen.defaultCommand\n    frozen = undefined\n  }\n\n  return self\n}\n"]}