{"version":3,"sources":["../yargs-parser/index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var camelCase = require('camelcase')\nvar path = require('path')\nvar tokenizeArgString = require('./lib/tokenize-arg-string')\nvar util = require('util')\n\nfunction parse (args, opts) {\n  if (!opts) opts = {}\n  // allow a string argument to be passed in rather\n  // than an argv array.\n  args = tokenizeArgString(args)\n  // aliases might have transitive relationships, normalize this.\n  var aliases = combineAliases(opts.alias || {})\n  var configuration = assign({\n    'short-option-groups': true,\n    'camel-case-expansion': true,\n    'dot-notation': true,\n    'parse-numbers': true,\n    'boolean-negation': true,\n    'duplicate-arguments-array': true,\n    'flatten-duplicate-arrays': true\n  }, opts.configuration)\n  var defaults = opts.default || {}\n  var configObjects = opts.configObjects || []\n  var envPrefix = opts.envPrefix\n  var newAliases = {}\n  // allow a i18n handler to be passed in, default to a fake one (util.format).\n  var __ = opts.__ || function (str) {\n    return util.format.apply(util, Array.prototype.slice.call(arguments))\n  }\n  var error = null\n  var flags = {\n    aliases: {},\n    arrays: {},\n    bools: {},\n    strings: {},\n    numbers: {},\n    counts: {},\n    normalize: {},\n    configs: {},\n    defaulted: {},\n    nargs: {},\n    coercions: {}\n  }\n  var negative = /^-[0-9]+(\\.[0-9]+)?/\n\n  ;[].concat(opts.array).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true\n  })\n\n  ;[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n  })\n\n  ;[].concat(opts.number).filter(Boolean).forEach(function (key) {\n    flags.numbers[key] = true\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n  })\n\n  Object.keys(opts.narg || {}).forEach(function (k) {\n    flags.nargs[k] = opts.narg[k]\n  })\n\n  Object.keys(opts.coerce || {}).forEach(function (k) {\n    flags.coercions[k] = opts.coerce[k]\n  })\n\n  if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n    ;[].concat(opts.config).filter(Boolean).forEach(function (key) {\n      flags.configs[key] = true\n    })\n  } else {\n    Object.keys(opts.config || {}).forEach(function (k) {\n      flags.configs[k] = opts.config[k]\n    })\n  }\n\n  // create a lookup table that takes into account all\n  // combinations of aliases: {f: ['foo'], foo: ['f']}\n  extendAliases(opts.key, aliases, opts.default, flags.arrays)\n\n  // apply default values to all aliases.\n  Object.keys(defaults).forEach(function (key) {\n    (flags.aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key])\n    setDefaulted(key)\n  })\n\n  var notFlags = []\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1)\n    args = args.slice(0, args.indexOf('--'))\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i]\n    var broken\n    var key\n    var letters\n    var m\n    var next\n    var value\n\n    // -- seperated by =\n    if (arg.match(/^--.+=/) || (\n      !configuration['short-option-groups'] && arg.match(/^-.+=/)\n    )) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/)\n\n      // nargs format = '--f=monkey washing cat'\n      if (checkAllAliases(m[1], flags.nargs)) {\n        args.splice(i + 1, 0, m[2])\n        i = eatNargs(i, m[1], args)\n      // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, 0, m[2])\n        i = eatArray(i, m[1], args)\n      } else {\n        setArg(m[1], m[2])\n      }\n    } else if (arg.match(/^--no-.+/) && configuration['boolean-negation']) {\n      key = arg.match(/^--no-(.+)/)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/) || (\n      !configuration['short-option-groups'] && arg.match(/^-.+/)\n    )) {\n      key = arg.match(/^--?(.+)/)[1]\n\n      // nargs format = '--foo a b c'\n      if (checkAllAliases(key, flags.nargs)) {\n        i = eatNargs(i, key, args)\n      // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args)\n      } else {\n        next = args[i + 1]\n\n        if (next !== undefined && (!next.match(/^-/) ||\n          next.match(negative)) &&\n          !checkAllAliases(key, flags.bools) &&\n          !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/) &&\n        !checkAllAliases(key, flags.bools) &&\n        !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)))\n      }\n    } else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3)\n          key = letters[j]\n\n          // nargs format = '-f=monkey washing cat'\n          if (checkAllAliases(key, flags.nargs)) {\n            args.splice(i + 1, 0, value)\n            i = eatNargs(i, key, args)\n          // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value)\n            i = eatArray(i, key, args)\n          } else {\n            setArg(key, value)\n          }\n\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        // current letter is an alphabetic character and next value is a number\n        if (/[A-Za-z]/.test(letters[j]) &&\n          /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, flags.nargs)) {\n          i = eatNargs(i, key, args)\n        // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args)\n        } else {\n          next = args[i + 1]\n\n          if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||\n            next.match(negative)) &&\n            !checkAllAliases(key, flags.bools) &&\n            !checkAllAliases(key, flags.counts)) {\n            setArg(key, next)\n            i++\n          } else if (/^(true|false)$/.test(next)) {\n            setArg(key, next)\n            i++\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)))\n          }\n        }\n      }\n    } else {\n      argv._.push(\n        flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n      )\n    }\n  }\n\n  // order of precedence:\n  // 1. command line arg\n  // 2. value from env var\n  // 3. value from config file\n  // 4. value from config objects\n  // 5. configured default value\n  applyEnvVars(argv, true) // special case: check env vars that point to config file\n  applyEnvVars(argv, false)\n  setConfig(argv)\n  setConfigObjects()\n  applyDefaultsAndAliases(argv, flags.aliases, defaults)\n  applyCoercions(argv)\n\n  // for any counts either not in args or without an explicit default, set to 0\n  Object.keys(flags.counts).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) setArg(key, 0)\n  })\n\n  notFlags.forEach(function (key) {\n    argv._.push(key)\n  })\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var toEat = checkAllAliases(key, flags.nargs)\n\n    if (args.length - (i + 1) < toEat) error = Error(__('Not enough arguments following: %s', key))\n\n    for (var ii = i + 1; ii < (toEat + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + toEat)\n  }\n\n  // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n  function eatArray (i, key, args) {\n    var start = i + 1\n    var argsToSet = []\n    var multipleArrayFlag = i > 0\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii]) && !negative.test(args[ii])) {\n        if (ii === start) {\n          setArg(key, defaultForType('array'))\n        }\n        multipleArrayFlag = true\n        break\n      }\n      i = ii\n      argsToSet.push(args[ii])\n    }\n    if (multipleArrayFlag) {\n      setArg(key, argsToSet.map(function (arg) {\n        return processValue(key, arg)\n      }))\n    } else {\n      argsToSet.forEach(function (arg) {\n        setArg(key, arg)\n      })\n    }\n\n    return i\n  }\n\n  function setArg (key, val) {\n    unsetDefaulted(key)\n\n    if (/-/.test(key) && !(flags.aliases[key] && flags.aliases[key].length) && configuration['camel-case-expansion']) {\n      var c = camelCase(key)\n      flags.aliases[key] = [c]\n      newAliases[c] = true\n    }\n\n    var value = processValue(key, val)\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    // handle populating aliases of the full key\n    if (flags.aliases[key]) {\n      flags.aliases[key].forEach(function (x) {\n        x = x.split('.')\n        setKey(argv, x, value)\n      })\n    }\n\n    // handle populating aliases of the first element of the dot-notation key\n    if (splitKey.length > 1 && configuration['dot-notation']) {\n      ;(flags.aliases[splitKey[0]] || []).forEach(function (x) {\n        x = x.split('.')\n\n        // expand alias with nested objects in key\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n\n        setKey(argv, x, value)\n      })\n    }\n\n    // Set normalize getter and setter when key is in 'normalize' but isn't an array\n    if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n      var keys = [key].concat(flags.aliases[key] || [])\n      keys.forEach(function (key) {\n        argv.__defineSetter__(key, function (v) {\n          val = path.normalize(v)\n        })\n\n        argv.__defineGetter__(key, function () {\n          return typeof val === 'string' ? path.normalize(val) : val\n        })\n      })\n    }\n  }\n\n  function processValue (key, val) {\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    var value = val\n    if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.coercions)) {\n      if (isNumber(val)) value = Number(val)\n      if (!isUndefined(val) && !isNumber(val) && checkAllAliases(key, flags.numbers)) value = NaN\n    }\n\n    // increment a count given as arg (either no value or value parsed as boolean)\n    if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n      value = increment\n    }\n\n    // Set normalized value when key is in 'normalize' and in 'arrays'\n    if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n      if (Array.isArray(val)) value = val.map(path.normalize)\n      else value = path.normalize(val)\n    }\n    return value\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, flags.aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = null\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath)\n            } catch (e) {\n              config = e\n            }\n            if (config instanceof Error) {\n              error = config\n              return\n            }\n          } else {\n            config = require(resolvedConfigPath)\n          }\n\n          setConfigObject(config)\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath))\n        }\n      }\n    })\n  }\n\n  // set args from config object.\n  // it recursively checks nested objects.\n  function setConfigObject (config, prev) {\n    Object.keys(config).forEach(function (key) {\n      var value = config[key]\n      var fullKey = prev ? prev + '.' + key : key\n\n      // if the value is an inner object and we have dot-notation\n      // enabled, treat inner objects in config the same as\n      // heavily nested dot notations (foo.bar.apple).\n      if (typeof value === 'object' && !Array.isArray(value) && configuration['dot-notation']) {\n        // if the value is an object but not an array, check nested object\n        setConfigObject(value, fullKey)\n      } else {\n        // setting arguments via CLI takes precedence over\n        // values within the config file.\n        if (!hasKey(argv, fullKey.split('.')) || (flags.defaulted[fullKey])) {\n          setArg(fullKey, value)\n        }\n      }\n    })\n  }\n\n  // set all config objects passed in opts\n  function setConfigObjects () {\n    if (typeof configObjects === 'undefined') return\n    configObjects.forEach(function (configObject) {\n      setConfigObject(configObject)\n    })\n  }\n\n  function applyEnvVars (argv, configOnly) {\n    if (typeof envPrefix === 'undefined') return\n\n    var prefix = typeof envPrefix === 'string' ? envPrefix : ''\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        // get array of nested keys and convert them to camel case\n        var keys = envVar.split('__').map(function (key, i) {\n          if (i === 0) {\n            key = key.substring(prefix.length)\n          }\n          return camelCase(key)\n        })\n\n        if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && (!hasKey(argv, keys) || flags.defaulted[keys.join('.')])) {\n          setArg(keys.join('.'), process.env[envVar])\n        }\n      }\n    })\n  }\n\n  function applyCoercions (argv) {\n    var coerce\n    Object.keys(argv).forEach(function (key) {\n      coerce = checkAllAliases(key, flags.coercions)\n      if (typeof coerce === 'function') {\n        try {\n          argv[key] = coerce(argv[key])\n        } catch (err) {\n          error = err\n        }\n      }\n    })\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n\n    if (typeof o !== 'object') return false\n    else return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key) {\n      if (o[key] === undefined) o[key] = {}\n      o = o[key]\n    })\n\n    var key = keys[keys.length - 1]\n\n    var isTypeArray = checkAllAliases(key, flags.arrays)\n    var isValueArray = Array.isArray(value)\n    var duplicate = configuration['duplicate-arguments-array']\n\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (Array.isArray(o[key])) {\n      if (duplicate && isTypeArray && isValueArray) {\n        o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : [o[key]].concat([value])\n      } else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n        o[key] = value\n      } else {\n        o[key] = o[key].concat([value])\n      }\n    } else if (o[key] === undefined && isTypeArray) {\n      o[key] = isValueArray ? value : [value]\n    } else if (duplicate && !(o[key] === undefined || checkAllAliases(key, flags.bools) || checkAllAliases(keys.join('.'), flags.bools) || checkAllAliases(key, flags.counts))) {\n      o[key] = [ o[key], value ]\n    } else {\n      o[key] = value\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases () {\n    Array.prototype.slice.call(arguments).forEach(function (obj) {\n      Object.keys(obj || {}).forEach(function (key) {\n        // short-circuit if we've already added a key\n        // to the aliases array, for example it might\n        // exist in both 'opts.default' and 'opts.key'.\n        if (flags.aliases[key]) return\n\n        flags.aliases[key] = [].concat(aliases[key] || [])\n        // For \"--option-name\", also set argv.optionName\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (/-/.test(x) && configuration['camel-case-expansion']) {\n            var c = camelCase(x)\n            flags.aliases[key].push(c)\n            newAliases[c] = true\n          }\n        })\n        flags.aliases[key].forEach(function (x) {\n          flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n            return x !== y\n          }))\n        })\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false\n    var toCheck = [].concat(flags.aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  function setDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true\n    })\n  }\n\n  function unsetDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k]\n    })\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      number: undefined,\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key, flags) {\n    var type = 'boolean'\n\n    if (checkAllAliases(key, flags.strings)) type = 'string'\n    else if (checkAllAliases(key, flags.numbers)) type = 'number'\n    else if (checkAllAliases(key, flags.arrays)) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (!configuration['parse-numbers']) return false\n    if (typeof x === 'number') return true\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  function isUndefined (num) {\n    return num === undefined\n  }\n\n  return {\n    argv: argv,\n    error: error,\n    aliases: flags.aliases,\n    newAliases: newAliases,\n    configuration: configuration\n  }\n}\n\n// if any aliases reference each other, we should\n// merge them together.\nfunction combineAliases (aliases) {\n  var aliasArrays = []\n  var change = true\n  var combined = {}\n\n  // turn alias lookup hash {key: ['alias1', 'alias2']} into\n  // a simple array ['key', 'alias1', 'alias2']\n  Object.keys(aliases).forEach(function (key) {\n    aliasArrays.push(\n      [].concat(aliases[key], key)\n    )\n  })\n\n  // combine arrays until zero changes are\n  // made in an iteration.\n  while (change) {\n    change = false\n    for (var i = 0; i < aliasArrays.length; i++) {\n      for (var ii = i + 1; ii < aliasArrays.length; ii++) {\n        var intersect = aliasArrays[i].filter(function (v) {\n          return aliasArrays[ii].indexOf(v) !== -1\n        })\n\n        if (intersect.length) {\n          aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii])\n          aliasArrays.splice(ii, 1)\n          change = true\n          break\n        }\n      }\n    }\n  }\n\n  // map arrays back to the hash-lookup (de-dupe while\n  // we're at it).\n  aliasArrays.forEach(function (aliasArray) {\n    aliasArray = aliasArray.filter(function (v, i, self) {\n      return self.indexOf(v) === i\n    })\n    combined[aliasArray.pop()] = aliasArray\n  })\n\n  return combined\n}\n\nfunction assign (defaults, configuration) {\n  var o = {}\n  configuration = configuration || {}\n\n  Object.keys(defaults).forEach(function (k) {\n    o[k] = defaults[k]\n  })\n  Object.keys(configuration).forEach(function (k) {\n    o[k] = configuration[k]\n  })\n\n  return o\n}\n\n// this function should only be called when a count is given as an arg\n// it is NOT called to set a default value\n// thus we can start the count at 1 instead of 0\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 1\n}\n\nfunction Parser (args, opts) {\n  var result = parse(args.slice(), opts)\n\n  return result.argv\n}\n\n// parse arguments and return detailed\n// meta information, aliases, etc.\nParser.detailed = function (args, opts) {\n  return parse(args.slice(), opts)\n}\n\nmodule.exports = Parser\n"]}