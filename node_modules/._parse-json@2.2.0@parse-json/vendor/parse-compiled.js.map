{"version":3,"sources":["../../sass-graph/node_modules/yargs/node_modules/read-pkg-up/node_modules/read-pkg/node_modules/load-json-file/node_modules/parse-json/vendor/parse.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA;;AAEA,IAAI,MAAM,QAAQ,WAAR,CAAV;;AAEA,SAAS,UAAT,CAAoB,CAApB,EAAuB;AACrB,SAAQ,KAAK,GAAL,IAAY,KAAK,GAAlB,IACC,KAAK,GAAL,IAAY,KAAK,GADlB,IAEC,KAAK,GAAL,IAAY,KAAK,GAFzB;AAGD;;AAED,SAAS,UAAT,CAAoB,CAApB,EAAuB;AACrB,SAAO,KAAK,GAAL,IAAY,KAAK,GAAxB;AACD;;AAED,SAAS,UAAT,CAAoB,CAApB,EAAuB;AACrB,SAAO,KAAK,GAAL,IAAY,KAAK,GAAxB;AACD;;AAED,IAAI,cAAc;AAChB,QAAM,IADU;AAEhB,OAAM,GAFU;AAGhB,QAAM,IAHU;AAIhB,OAAM,IAJU;AAKhB,OAAM,IALU;AAMhB,OAAM,IANU;AAOhB,OAAM,IAPU;AAQhB,OAAM,IARU;AAShB,OAAM,IATU;AAUhB,OAAM;AAVU,CAAlB;;AAaA,SAAS,WAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC,QAAjC,EAA2C,MAA3C,EAAmD,MAAnD,EAA2D,KAA3D,EAAkE;AAChE,MAAI,SAAS,MAAM,MAAN,IAAgB,SAAS,CAAzB,IAA8B,GAA9B,IAAqC,SAAS,CAA9C,CAAb;AAAA,MACI,SAAS,WAAW,MAAX,GAAoB,CADjC;AAAA,MAEI,UAAU,EAFd;AAAA,MAGI,YAAY,EAHhB;;AAKA,MAAI,mBAAmB,QAAQ,IAAI,gBAAZ,GAA+B,IAAI,oBAA1D;;AAEA;AACA,MAAI,SAAS,WAAW,EAAxB,EAA4B;AAC1B,aAAS,WAAW,EAApB;AACD;;AAED,SAAO,CAAP,EAAU;AACR,QAAI,MAAM,MAAM,EAAE,MAAR,CAAV;;AAEA,QAAI,iBAAiB,GAAjB,KAAyB,WAAW,MAAM,MAA9C,EAAsD;AACpD,UAAI,YAAY,MAAhB,EAAwB;AACtB;AACA,qBAAa,GAAb;AACD;AACD;AACD;AACD,eAAW,GAAX;;AAEA,QAAI,aAAa,MAAjB,EAAyB;AACvB,mBAAa,GAAb;AACD,KAFD,MAEO,IAAI,WAAW,MAAf,EAAuB;AAC5B,mBAAa,MAAM,MAAN,MAAkB,IAAlB,GAAyB,IAAzB,GAAgC,GAA7C;AACD;;AAED;AACA,QAAI,QAAQ,MAAR,GAAiB,EAArB,EAAyB;AAC1B;;AAED,SAAO,SAAS,IAAT,GAAgB,OAAhB,GAA0B,IAA1B,GAAiC,SAAxC;AACD;;AAED,SAAS,KAAT,CAAe,KAAf,EAAsB,OAAtB,EAA+B;AAC7B;AACA,MAAI,QAAQ,EAAE,QAAQ,IAAR,KAAiB,MAAjB,IAA2B,QAAQ,MAArC,CAAZ;AACA,MAAI,mBAAmB,QAAQ,IAAI,gBAAZ,GAA+B,IAAI,oBAA1D;AACA,MAAI,eAAe,QAAQ,IAAI,YAAZ,GAA2B,IAAI,gBAAlD;;AAEA,MAAI,SAAS,MAAM,MAAnB;AAAA,MACI,SAAS,CADb;AAAA,MAEI,YAAY,CAFhB;AAAA,MAGI,WAAW,CAHf;AAAA,MAII,QAAQ,EAJZ;;AAMA,MAAI,aAAa,sBAAW,CAAE,CAA9B;AACA,MAAI,WAAW,kBAAS,CAAT,EAAY;AAAC,WAAO,CAAP;AAAS,GAArC;;AAEA;;;;;;;AAOA,MAAI,QAAQ,SAAZ,EAAuB;AACrB,KAAC,CAAC,YAAW;AACX,UAAI,QAAQ,IAAZ;AACA,mBAAa,sBAAW;AACtB,YAAI,UAAU,IAAd,EAAoB,MAAM,MAAM,+BAAN,CAAN;AACpB,gBAAQ,QAAR;AACD,OAHD;;AAKA,iBAAW,kBAAS,CAAT,EAAY,IAAZ,EAAkB;AAC3B,YAAI,SAAS,QAAb,EAAuB;AACrB,cAAI,OAAO;AACT,iBAAK,MAAM,MAAN,CAAa,KAAb,EAAoB,WAAS,KAA7B,CADI;AAET,kBAAM,IAFG;AAGT,mBAAO,MAAM,KAAN,CAAY,CAAZ;AAHE,WAAX;AAKA,cAAI,MAAM,SAAV,EAAqB,KAAK,KAAL,GAAa,CAAb;AACrB,kBAAQ,SAAR,CAAkB,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B;AACD;AACD,gBAAQ,IAAR;AACA,eAAO,CAAP;AACD,OAZD;AAaD,KApBA;AAqBF;;AAED,WAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,QAAI,SAAS,WAAW,SAAxB;;AAEA,QAAI,CAAC,GAAL,EAAU;AACR,UAAI,WAAW,MAAf,EAAuB;AACrB,YAAI,QAAQ,OACV,KACG,SADH,CACa,MAAM,QAAN,CADb,EAEG,OAFH,CAEW,QAFX,EAEqB,EAFrB,EAGG,OAHH,CAGW,IAHX,EAGiB,KAHjB,EAIG,OAJH,CAIW,MAJX,EAImB,GAJnB,CADU,GAMR,IANJ;;AAQA,YAAI,CAAC,GAAL,EAAU,MAAM,sBAAsB,KAA5B;AACX,OAVD,MAUO;AACL,YAAI,CAAC,GAAL,EAAU,MAAM,yBAAN;AACX;AACF;;AAED,QAAI,QAAQ,YAAY,YAAY,KAAZ,EAAmB,GAAnB,EAAwB,QAAxB,EAAkC,MAAlC,EAA0C,MAA1C,EAAkD,KAAlD,CAAZ,CAAZ;AACA,UAAM,GAAN,GAAY,SAAS,CAArB;AACA,UAAM,MAAN,GAAe,SAAS,CAAxB;AACA,UAAM,KAAN;AACD;;AAED,WAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB;AACA,QAAI,QAAQ,IAAR,IAAgB,MAAM,QAAN,MAAoB,IAAxC,EAA8C;AAC9C,gBAAY,QAAZ;AACA;AACD;;AAED,WAAS,YAAT,GAAwB;AACtB,QAAI,MAAJ;;AAEA,WAAO,WAAW,MAAlB,EAA0B;AACxB;AACA,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,QAAQ,GAAR,IAAgB,QAAQ,IAAR,IAAgB,KAApC,EAA4C;AAC1C,eAAO,SAAS,YAAY,GAAZ,CAAT,EAA2B,SAA3B,CAAP;AAED,OAHD,MAGO,IAAI,QAAQ,GAAZ,EAAiB;AACtB,iBAAS,SAAT,EAAoB,WAApB;AACA,eAAO,aAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAZ,EAAiB;AACtB,iBAAS,SAAT,EAAoB,WAApB;AACA,eAAO,YAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAR,IACA,QAAQ,GADR,IAEA,WAAW,GAAX;AACA;AAHA,SAIC,UAAU,QAAQ,GAAR,IAAe,QAAQ,GAAvB,IAA8B,QAAQ,GAAhD,CAJL,EAKL;AACA,eAAO,SAAS,aAAT,EAAwB,SAAxB,CAAP;AAED,OARM,MAQA,IAAI,QAAQ,GAAZ,EAAiB;AACtB,qBAAa,MAAb;AACA,eAAO,SAAS,IAAT,EAAe,SAAf,CAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAZ,EAAiB;AACtB,qBAAa,MAAb;AACA,eAAO,SAAS,IAAT,EAAe,SAAf,CAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAZ,EAAiB;AACtB,qBAAa,OAAb;AACA,eAAO,SAAS,KAAT,EAAgB,SAAhB,CAAP;AAED,OAJM,MAIA;AACL;AACA,eAAO,SAAS,SAAT,CAAP;AACD;AACF;AACF;;AAED,WAAS,QAAT,GAAoB;AAClB,QAAI,MAAJ;;AAEA,WAAO,WAAW,MAAlB,EAA0B;AACxB;AACA,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,QAAQ,GAAR,IAAgB,QAAQ,IAAR,IAAgB,KAApC,EAA4C;AAC1C,eAAO,SAAS,YAAY,GAAZ,CAAT,EAA2B,KAA3B,CAAP;AAED,OAHD,MAGO,IAAI,QAAQ,GAAZ,EAAiB;AACtB,iBAAS,SAAT,EAAoB,WAApB;AACA,eAAO,aAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAZ,EAAiB;AACtB,iBAAS,SAAT,EAAoB,WAApB;AACA,eAAO,YAAP;AAED,OAJM,MAIA,IAAI,QAAQ,GAAR,IACA,WAAW,GAAX,CADJ,EAEL;AACA,eAAO,SAAS,YAAY,IAAZ,CAAT,EAA4B,KAA5B,CAAP;AAED,OALM,MAKA,IAAI,SACA,IAAI,iBAAJ,CAAsB,GAAtB,CADA,IAC+B,QAAQ,IAAR,IAAgB,MAAM,QAAN,MAAoB,GADvE,EAC6E;AAClF;AACA,YAAI,WAAW,WAAW,CAA1B;AACA,YAAI,SAAS,iBAAb;;AAEA,YAAI,WAAW,SAAf,EAA0B;AACxB,qBAAW,QAAX;AACA,iBAAO,SAAS,SAAT,CAAP;AACD,SAHD,MAGO;AACL,iBAAO,SAAS,MAAT,EAAiB,KAAjB,CAAP;AACD;AAEF,OAbM,MAaA;AACL;AACA,eAAO,SAAS,SAAT,CAAP;AACD;AACF;AACF;;AAED,WAAS,cAAT,GAA0B;AACxB;AACA,WAAO,WAAW,MAAlB,EAA0B;AACxB,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,iBAAiB,GAAjB,CAAJ,EAA2B;AACzB;AACA,iBAAS,SAAT,EAAoB,YAApB;AACA;AACA;AACA,gBAAQ,GAAR;AACA,iBAAS,SAAT,EAAoB,SAApB;AACA;AAED,OATD,MASO,IAAI,aAAa,GAAb,CAAJ,EAAuB;AAC5B;;AAED,OAHM,MAGA,IAAI,QAAQ,GAAR,IACD,KADC,KAEA,MAAM,QAAN,MAAoB,GAApB,IAA2B,MAAM,QAAN,MAAoB,GAF/C,CAAJ,EAGL;AACA;AACA,iBAAS,SAAT,EAAoB,YAApB;AACA;AACA;AACA,oBAAY,MAAM,UAAN,MAAsB,GAAlC;AACA,iBAAS,SAAT,EAAoB,SAApB;AACA;AAED,OAZM,MAYA;AACL;AACA;AACD;AACF;AACD,WAAO,SAAS,SAAT,EAAoB,YAApB,CAAP;AACD;;AAED,WAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,WAAO,WAAW,MAAlB,EAA0B;AACxB,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,iBAAiB,GAAjB,CAAJ,EAA2B;AACzB;AACA,YAAI,CAAC,KAAL,EAAY;AACV;AACA;AACA;AACD;;AAED,gBAAQ,GAAR;AAED,OAVD,MAUO,IAAI,QAAQ,GAAR,IAAe,KAAnB,EAA0B;AAC/B;AACA,YAAI,MAAM,QAAN,MAAoB,GAAxB,EAA6B;AAC3B;AACA;AACD;AAEF,OAPM,MAOA;AACL;AACD;AACF;;AAED,QAAI,KAAJ,EAAW;AACT,WAAK,4BAAL;AACD;AACF;;AAED,WAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7B;AACA,QAAI,OAAO,QAAX;AACA,QAAI,MAAM,QAAQ,MAAlB;AACA,SAAK,IAAI,IAAE,CAAX,EAAc,IAAE,GAAhB,EAAqB,GAArB,EAA0B;AACxB,UAAI,YAAY,MAAZ,IAAsB,QAAQ,CAAR,KAAc,MAAM,QAAN,CAAxC,EAAyD;AACvD,mBAAW,OAAK,CAAhB;AACA;AACD;AACD;AACD;AACF;;AAED,WAAS,WAAT,GAAuB;AACrB,QAAI,SAAS,QAAQ,cAAR,GAAyB,OAAO,MAAP,CAAc,IAAd,CAAzB,GAA+C,EAA5D;AAAA,QACI,eAAe,EADnB;AAAA,QAEI,eAAe,KAFnB;;AAIA,WAAO,WAAW,MAAlB,EAA0B;AACxB;AACA,UAAI,QAAQ,UAAZ;AACA;AACA;AACA,UAAI,MAAM,MAAM,UAAN,CAAV;AACA,eAAS,SAAT,EAAoB,WAApB;;AAEA,UAAI,QAAQ,GAAR,IAAe,UAAU,SAA7B,EAAwC;AACtC,YAAI,CAAC,KAAD,IAAU,YAAd,EAA4B;AAC1B;AACA,eAAK,0BAAL;AACD;AACD,eAAO,MAAP;AAED,OAPD,MAOO,IAAI,QAAQ,GAAR,IAAe,UAAU,SAA7B,EAAwC;AAC7C;AACA,cAAM,IAAN,CAAW,KAAX;AACA,YAAI,QAAQ,cAAZ;AACA,cAAM,GAAN;;AAEA,YAAI,UAAU,SAAd,EAAyB,KAAK,4BAA4B,KAAjC;AACzB,YAAI,OAAO,KAAP,KAAkB,QAAtB,EAAgC;AAC9B,cAAI,CAAC,KAAD,IAAU,OAAO,KAAP,KAAkB,QAAhC,EAA0C;AACxC,iBAAK,qBAAqB,KAA1B;AACD;AACF;;AAED,YAAI,CAAC,SAAS,YAAT,IAAyB,aAAa,KAAb,KAAuB,IAAjD,KAA0D,QAAQ,aAAR,KAA0B,SAAxF,EAAmG;AACjG,cAAI,QAAQ,aAAR,KAA0B,OAA9B,EAAuC;AACrC,iBAAK,mBAAmB,KAAxB;AACD,WAFD,MAEO;AACL;AACD;AACF,SAND,MAMO;AACL,cAAI,OAAO,QAAQ,OAAf,KAA4B,UAAhC,EAA4C;AAC1C,oBAAQ,QAAQ,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,KAA3B,EAAkC,KAAlC,CAAR;AACD;;AAED,cAAI,UAAU,SAAd,EAAyB;AACvB,2BAAe,IAAf;AACA,mBAAO,cAAP,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC;AACnC,qBAAO,KAD4B;AAEnC,0BAAY,IAFuB;AAGnC,4BAAc,IAHqB;AAInC,wBAAU;AAJyB,aAArC;AAMD;AACF;;AAED;;AAEA;AACA,YAAI,MAAM,MAAM,UAAN,CAAV;AACA,iBAAS,SAAT,EAAoB,WAApB;;AAEA,YAAI,QAAQ,GAAZ,EAAiB;AACf;AAED,SAHD,MAGO,IAAI,QAAQ,GAAZ,EAAiB;AACtB,iBAAO,MAAP;AAED,SAHM,MAGA;AACL;AACD;AAEF,OAnDM,MAmDA;AACL;AACA;AACD;AACF;;AAED;AACD;;AAED,WAAS,UAAT,GAAsB;AACpB,QAAI,SAAS,EAAb;;AAEA,WAAO,WAAW,MAAlB,EAA0B;AACxB;AACA,YAAM,IAAN,CAAW,OAAO,MAAlB;AACA,UAAI,OAAO,cAAX;AACA,YAAM,GAAN;AACA;AACA;AACA,UAAI,MAAM,MAAM,UAAN,CAAV;AACA,eAAS,SAAT,EAAoB,WAApB;;AAEA,UAAI,SAAS,SAAb,EAAwB;AACtB,YAAI,OAAO,QAAQ,OAAf,KAA4B,UAAhC,EAA4C;AAC1C,iBAAO,QAAQ,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,OAAO,OAAO,MAAd,CAA3B,EAAkD,IAAlD,CAAP;AACD;AACD,YAAI,SAAS,SAAb,EAAwB;AACtB,iBAAO,MAAP;AACA,iBAAO,IAAP,CAFsB,CAEV;AACb,SAHD,MAGO;AACL,iBAAO,IAAP,CAAY,IAAZ;AACD;AACF;;AAED,UAAI,QAAQ,GAAZ,EAAiB;AACf,YAAI,SAAS,SAAb,EAAwB;AACtB,eAAK,4BAAL;AACD;AAEF,OALD,MAKO,IAAI,QAAQ,GAAZ,EAAiB;AACtB,YAAI,CAAC,KAAD,IAAU,SAAS,SAAnB,IAAgC,OAAO,MAA3C,EAAmD;AACjD;AACA,eAAK,yBAAL;AACD;AACD,eAAO,MAAP;AAED,OAPM,MAOA;AACL;AACA;AACD;AACF;AACF;;AAED,WAAS,WAAT,GAAuB;AACrB;AACA;;AAEA,QAAI,QAAQ,QAAZ;AAAA,QACI,MAAM,MAAM,UAAN,CADV;AAAA,QAEI,CAFJ;;AAIA,QAAI,SAAS,SAAT,MAAS,CAAS,QAAT,EAAmB;AAC9B,UAAI,MAAM,MAAM,MAAN,CAAa,KAAb,EAAoB,WAAW,KAA/B,CAAV;;AAEA,UAAI,QAAJ,EAAc;AACZ,YAAI,SAAS,SAAS,IAAI,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAT,EAAkC,CAAlC,CAAb;AACD,OAFD,MAEO;AACL,YAAI,SAAS,OAAO,GAAP,CAAb;AACD;;AAED,UAAI,OAAO,KAAP,CAAa,MAAb,CAAJ,EAA0B;AACxB;AACA,aAAK,4BAA4B,MAAM,MAAN,CAAa,KAAb,EAAoB,WAAW,KAAX,GAAmB,CAAvC,CAA5B,GAAwE,GAA7E;AACD,OAHD,MAGO,IAAI,CAAC,KAAD,IAAU,CAAC,IAAI,KAAJ,CAAU,gDAAV,CAAf,EAA4E;AACjF;AACA;AACA,aAAK,iCAAiC,MAAM,MAAN,CAAa,KAAb,EAAoB,WAAW,KAAX,GAAmB,CAAvC,CAAjC,GAA6E,GAAlF;AACD,OAJM,MAIA;AACL,eAAO,MAAP;AACD;AACF,KAnBD;;AAqBA;AACA;AACA,QAAI,QAAQ,GAAR,IAAgB,QAAQ,GAAR,IAAe,KAAnC,EAA2C,MAAM,MAAM,UAAN,CAAN;;AAE3C,QAAI,QAAQ,GAAR,IAAe,KAAnB,EAA0B;AACxB,mBAAa,KAAb;AACA,aAAO,GAAP;AACD;;AAED,QAAI,QAAQ,GAAR,IAAe,KAAnB,EAA0B;AACxB,mBAAa,UAAb;;AAEA;AACA,aAAO,QAAP;AACD;;AAED,QAAI,OAAO,GAAP,IAAc,OAAO,GAAzB,EAA8B;AAC5B;AACA;AACA,aAAO,WAAW,MAAX,IAAqB,WAAW,MAAM,QAAN,CAAX,CAA5B;AAAyD;AAAzD,OACA,MAAM,MAAM,UAAN,CAAN;AACD;;AAED;AACA,QAAI,QAAQ,GAAZ,EAAiB;AACf,YAAM,MAAM,UAAN,CAAN;;AAEA;AACA,UAAI,WAAW,QAAQ,GAAR,IAAe,QAAQ,GAAvB,IAA8B,WAAW,GAAX,CAA7C;AACA,UAAI,SAAS,QAAQ,GAAR,IAAe,QAAQ,GAApC;;AAEA,UAAI,UAAU,YAAY,MAAtB,CAAJ,EAAmC;AACjC,eAAO,WAAW,MAAX,IACA,CAAC,SAAS,UAAT,GAAsB,UAAvB,EAAoC,MAAM,QAAN,CAApC,CADP;AAEE;AAFF,SAIA,IAAI,OAAO,CAAX;AACA,YAAI,MAAM,KAAN,MAAiB,GAArB,EAA0B;AACxB,iBAAO,CAAC,CAAR;AACA;AACD,SAHD,MAGO,IAAI,MAAM,KAAN,MAAiB,GAArB,EAA0B;AAC/B;AACD;;AAED,eAAO,OAAO,OAAO,QAAP,CAAd;AACD;AACF;;AAED,QAAI,QAAQ,GAAZ,EAAiB;AACf;AACA;AACA,aAAO,WAAW,MAAX,IAAqB,WAAW,MAAM,QAAN,CAAX,CAA5B;AAAyD;AAAzD,OACA,MAAM,MAAM,UAAN,CAAN;AACD;;AAED,QAAI,QAAQ,GAAR,IAAe,QAAQ,GAA3B,EAAgC;AAC9B,YAAM,MAAM,UAAN,CAAN;AACA,UAAI,QAAQ,GAAR,IAAe,QAAQ,GAA3B,EAAgC;AAChC;AACA;AACA,aAAO,WAAW,MAAX,IAAqB,WAAW,MAAM,QAAN,CAAX,CAA5B;AAAyD;AAAzD,OACA,MAAM,MAAM,UAAN,CAAN;AACD;;AAED;AACA;AACA,WAAO,QAAP;AACD;;AAED,WAAS,eAAT,GAA2B;AACzB;AACA;;AAEA,QAAI,SAAS,EAAb;;AAEA,WAAO,WAAW,MAAlB,EAA0B;AACxB,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,QAAQ,IAAR,IACA,MAAM,QAAN,MAAoB,GADpB,IAEA,WAAW,MAAM,WAAS,CAAf,CAAX,CAFA,IAGA,WAAW,MAAM,WAAS,CAAf,CAAX,CAHA,IAIA,WAAW,MAAM,WAAS,CAAf,CAAX,CAJA,IAKA,WAAW,MAAM,WAAS,CAAf,CAAX,CALJ,EAME;AACA;AACA,cAAM,OAAO,YAAP,CAAoB,SAAS,MAAM,MAAN,CAAa,WAAS,CAAtB,EAAyB,CAAzB,CAAT,EAAsC,EAAtC,CAApB,CAAN;AACA,oBAAY,CAAZ;AACD;;AAED,UAAI,OAAO,MAAX,EAAmB;AACjB;AACA,YAAI,IAAI,gBAAJ,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,oBAAU,GAAV;AACD,SAFD,MAEO;AACL;AACA,iBAAO,MAAP;AACD;AAEF,OATD,MASO;AACL,YAAI,IAAI,iBAAJ,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B,oBAAU,GAAV;AACD,SAFD,MAEO;AACL,iBAAO,SAAP;AACD;AACF;AACF;;AAED;AACD;;AAED,WAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B;AACA,QAAI,SAAS,EAAb;;AAEA,WAAO,WAAW,MAAlB,EAA0B;AACxB,UAAI,MAAM,MAAM,UAAN,CAAV;;AAEA,UAAI,QAAQ,OAAZ,EAAqB;AACnB,eAAO,MAAP;AAED,OAHD,MAGO,IAAI,QAAQ,IAAZ,EAAkB;AACvB,YAAI,YAAY,MAAhB,EAAwB;AACxB,cAAM,MAAM,UAAN,CAAN;;AAEA,YAAI,YAAY,GAAZ,MAAqB,SAAU,OAAO,GAAP,IAAc,OAAO,GAApD,CAAJ,EAA+D;AAC7D,oBAAU,YAAY,GAAZ,CAAV;AAED,SAHD,MAGO,IAAI,SAAS,iBAAiB,GAAjB,CAAb,EAAoC;AACzC;AACA,kBAAQ,GAAR;AAED,SAJM,MAIA,IAAI,QAAQ,GAAR,IAAgB,QAAQ,GAAR,IAAe,KAAnC,EAA2C;AAChD;AACA,cAAI,MAAM,QAAQ,GAAR,GAAc,CAAd,GAAkB,CAA5B;;AAEA;AACA,eAAK,IAAI,IAAE,CAAX,EAAc,IAAE,GAAhB,EAAqB,GAArB,EAA0B;AACxB,gBAAI,YAAY,MAAhB,EAAwB;AACxB,gBAAI,CAAC,WAAW,MAAM,QAAN,CAAX,CAAL,EAAkC,KAAK,qBAAL;AAClC;AACD;;AAED,oBAAU,OAAO,YAAP,CAAoB,SAAS,MAAM,MAAN,CAAa,WAAS,GAAtB,EAA2B,GAA3B,CAAT,EAA0C,EAA1C,CAApB,CAAV;AACD,SAZM,MAYA,IAAI,SAAS,WAAW,GAAX,CAAb,EAA8B;AACnC,cAAI,MAAM,GAAN,IAAa,WAAW,MAAM,QAAN,CAAX,CAAb,IAA4C,WAAW,MAAM,WAAS,CAAf,CAAX,CAAhD,EAA+E;AAC7E;AACA,gBAAI,SAAS,CAAb;AACD,WAHD,MAGO,IAAI,WAAW,MAAM,QAAN,CAAX,CAAJ,EAAiC;AACtC;AACA,gBAAI,SAAS,CAAb;AACD,WAHM,MAGA;AACL,gBAAI,SAAS,CAAb;AACD;AACD,sBAAY,SAAS,CAArB;AACA,oBAAU,OAAO,YAAP,CAAoB,SAAS,MAAM,MAAN,CAAa,WAAS,MAAtB,EAA8B,MAA9B,CAAT,EAAgD,CAAhD,CAApB,CAAV;AACA;;;;;;AAOD,SAnBM,MAmBA,IAAI,KAAJ,EAAW;AAChB;AACA,oBAAU,GAAV;AAED,SAJM,MAIA;AACL;AACA;AACD;AAEF,OAnDM,MAmDA,IAAI,iBAAiB,GAAjB,CAAJ,EAA2B;AAChC;AAED,OAHM,MAGA;AACL,YAAI,CAAC,KAAD,IAAU,IAAI,UAAJ,CAAe,CAAf,IAAoB,EAAlC,EAAsC;AACpC;AACA,eAAK,8BAAL;AACD;;AAED;AACA,kBAAU,GAAV;AACD;AACF;;AAED;AACD;;AAED;AACA,MAAI,eAAe,cAAnB;AACA,MAAI,iBAAiB,SAAjB,IAA8B,WAAW,MAA7C,EAAqD;AACnD;;AAEA,QAAI,YAAY,MAAhB,EAAwB;AACtB,UAAI,OAAO,QAAQ,OAAf,KAA4B,UAAhC,EAA4C;AAC1C,uBAAe,QAAQ,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,EAA3B,EAA+B,YAA/B,CAAf;AACD;AACD,aAAO,YAAP;AACD,KALD,MAKO;AACL;AACD;AAEF,GAZD,MAYO;AACL,QAAI,QAAJ,EAAc;AACZ,WAAK,4BAAL;AACD,KAFD,MAEO;AACL,WAAK,sBAAL;AACD;AACF;AACF;;AAED;;;;;;;;;;AAUA,OAAO,OAAP,CAAe,KAAf,GAAuB,SAAS,SAAT,CAAmB,KAAnB,EAA0B,OAA1B,EAAmC;AACxD;AACA,MAAI,OAAO,OAAP,KAAoB,UAAxB,EAAoC;AAClC,cAAU;AACR,eAAS;AADD,KAAV;AAGD;;AAED,MAAI,UAAU,SAAd,EAAyB;AACvB;AACA;AACA;AACA,WAAO,SAAP;AACD;;AAED;AACA,MAAI,OAAO,KAAP,KAAkB,QAAtB,EAAgC,QAAQ,OAAO,KAAP,CAAR;AAChC,MAAI,WAAW,IAAf,EAAqB,UAAU,EAAV;AACrB,MAAI,QAAQ,aAAR,IAAyB,IAA7B,EAAmC,QAAQ,aAAR,GAAwB,QAAxB;;AAEnC,MAAI,QAAQ,aAAR,KAA0B,OAA1B,IAAqC,QAAQ,aAAR,KAA0B,QAAnE,EAA6E;AAC3E,QAAI,QAAQ,cAAR,IAA0B,IAA9B,EAAoC;AAClC,cAAQ,cAAR,GAAyB,IAAzB;AACD;AACF;;AAED,MAAI;AACF,WAAO,MAAM,KAAN,EAAa,OAAb,CAAP;AACD,GAFD,CAEE,OAAM,GAAN,EAAW;AACX;AACA;AACA;AACA,QAAI,eAAe,WAAf,IAA8B,IAAI,GAAJ,IAAW,IAAzC,IAAiD,IAAI,MAAJ,IAAc,IAAnE,EAAyE;AACvE,UAAI,UAAU,GAAd;AACA,YAAM,YAAY,QAAQ,OAApB,CAAN;AACA,UAAI,MAAJ,GAAa,QAAQ,MAArB;AACA,UAAI,GAAJ,GAAU,QAAQ,GAAlB;AACD;AACD,UAAM,GAAN;AACD;AACF,CAxCD;;AA0CA,OAAO,OAAP,CAAe,QAAf,GAA0B,SAAS,YAAT,CAAsB,KAAtB,EAA6B,OAA7B,EAAsC;AAC9D,MAAI,WAAW,IAAf,EAAqB,UAAU,EAAV;;AAErB,UAAQ,SAAR,GAAoB,UAAS,IAAT,EAAe;AACjC,QAAI,QAAQ,SAAZ,EAAuB,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,CAAyB,KAAK,KAA9B,EAAqC,QAAQ,SAA7C;AACvB,WAAO,IAAP,CAAY,IAAZ;AACD,GAHD;;AAKA,MAAI,SAAS,EAAb;AACA,SAAO,IAAP,GAAc,OAAO,OAAP,CAAe,KAAf,CAAqB,KAArB,EAA4B,OAA5B,CAAd;AACA,SAAO,MAAP;AACD,CAXD","file":"parse-compiled.js","sourcesContent":["/*\n * Author: Alex Kocharin <alex@kocharin.ru>\n * GIT: https://github.com/rlidwka/jju\n * License: WTFPL, grab your copy here: http://www.wtfpl.net/txt/copying/\n */\n\n// RTFM: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n\nvar Uni = require('./unicode')\n\nfunction isHexDigit(x) {\n  return (x >= '0' && x <= '9')\n      || (x >= 'A' && x <= 'F')\n      || (x >= 'a' && x <= 'f')\n}\n\nfunction isOctDigit(x) {\n  return x >= '0' && x <= '7'\n}\n\nfunction isDecDigit(x) {\n  return x >= '0' && x <= '9'\n}\n\nvar unescapeMap = {\n  '\\'': '\\'',\n  '\"' : '\"',\n  '\\\\': '\\\\',\n  'b' : '\\b',\n  'f' : '\\f',\n  'n' : '\\n',\n  'r' : '\\r',\n  't' : '\\t',\n  'v' : '\\v',\n  '/' : '/',\n}\n\nfunction formatError(input, msg, position, lineno, column, json5) {\n  var result = msg + ' at ' + (lineno + 1) + ':' + (column + 1)\n    , tmppos = position - column - 1\n    , srcline = ''\n    , underline = ''\n\n  var isLineTerminator = json5 ? Uni.isLineTerminator : Uni.isLineTerminatorJSON\n\n  // output no more than 70 characters before the wrong ones\n  if (tmppos < position - 70) {\n    tmppos = position - 70\n  }\n\n  while (1) {\n    var chr = input[++tmppos]\n\n    if (isLineTerminator(chr) || tmppos === input.length) {\n      if (position >= tmppos) {\n        // ending line error, so show it after the last char\n        underline += '^'\n      }\n      break\n    }\n    srcline += chr\n\n    if (position === tmppos) {\n      underline += '^'\n    } else if (position > tmppos) {\n      underline += input[tmppos] === '\\t' ? '\\t' : ' '\n    }\n\n    // output no more than 78 characters on the string\n    if (srcline.length > 78) break\n  }\n\n  return result + '\\n' + srcline + '\\n' + underline\n}\n\nfunction parse(input, options) {\n  // parse as a standard JSON mode\n  var json5 = !(options.mode === 'json' || options.legacy)\n  var isLineTerminator = json5 ? Uni.isLineTerminator : Uni.isLineTerminatorJSON\n  var isWhiteSpace = json5 ? Uni.isWhiteSpace : Uni.isWhiteSpaceJSON\n\n  var length = input.length\n    , lineno = 0\n    , linestart = 0\n    , position = 0\n    , stack = []\n\n  var tokenStart = function() {}\n  var tokenEnd = function(v) {return v}\n\n  /* tokenize({\n       raw: '...',\n       type: 'whitespace'|'comment'|'key'|'literal'|'separator'|'newline',\n       value: 'number'|'string'|'whatever',\n       path: [...],\n     })\n  */\n  if (options._tokenize) {\n    ;(function() {\n      var start = null\n      tokenStart = function() {\n        if (start !== null) throw Error('internal error, token overlap')\n        start = position\n      }\n\n      tokenEnd = function(v, type) {\n        if (start != position) {\n          var hash = {\n            raw: input.substr(start, position-start),\n            type: type,\n            stack: stack.slice(0),\n          }\n          if (v !== undefined) hash.value = v\n          options._tokenize.call(null, hash)\n        }\n        start = null\n        return v\n      }\n    })()\n  }\n\n  function fail(msg) {\n    var column = position - linestart\n\n    if (!msg) {\n      if (position < length) {\n        var token = '\\'' +\n          JSON\n            .stringify(input[position])\n            .replace(/^\"|\"$/g, '')\n            .replace(/'/g, \"\\\\'\")\n            .replace(/\\\\\"/g, '\"')\n          + '\\''\n\n        if (!msg) msg = 'Unexpected token ' + token\n      } else {\n        if (!msg) msg = 'Unexpected end of input'\n      }\n    }\n\n    var error = SyntaxError(formatError(input, msg, position, lineno, column, json5))\n    error.row = lineno + 1\n    error.column = column + 1\n    throw error\n  }\n\n  function newline(chr) {\n    // account for <cr><lf>\n    if (chr === '\\r' && input[position] === '\\n') position++\n    linestart = position\n    lineno++\n  }\n\n  function parseGeneric() {\n    var result\n\n    while (position < length) {\n      tokenStart()\n      var chr = input[position++]\n\n      if (chr === '\"' || (chr === '\\'' && json5)) {\n        return tokenEnd(parseString(chr), 'literal')\n\n      } else if (chr === '{') {\n        tokenEnd(undefined, 'separator')\n        return parseObject()\n\n      } else if (chr === '[') {\n        tokenEnd(undefined, 'separator')\n        return parseArray()\n\n      } else if (chr === '-'\n             ||  chr === '.'\n             ||  isDecDigit(chr)\n                 //           + number       Infinity          NaN\n             ||  (json5 && (chr === '+' || chr === 'I' || chr === 'N'))\n      ) {\n        return tokenEnd(parseNumber(), 'literal')\n\n      } else if (chr === 'n') {\n        parseKeyword('null')\n        return tokenEnd(null, 'literal')\n\n      } else if (chr === 't') {\n        parseKeyword('true')\n        return tokenEnd(true, 'literal')\n\n      } else if (chr === 'f') {\n        parseKeyword('false')\n        return tokenEnd(false, 'literal')\n\n      } else {\n        position--\n        return tokenEnd(undefined)\n      }\n    }\n  }\n\n  function parseKey() {\n    var result\n\n    while (position < length) {\n      tokenStart()\n      var chr = input[position++]\n\n      if (chr === '\"' || (chr === '\\'' && json5)) {\n        return tokenEnd(parseString(chr), 'key')\n\n      } else if (chr === '{') {\n        tokenEnd(undefined, 'separator')\n        return parseObject()\n\n      } else if (chr === '[') {\n        tokenEnd(undefined, 'separator')\n        return parseArray()\n\n      } else if (chr === '.'\n             ||  isDecDigit(chr)\n      ) {\n        return tokenEnd(parseNumber(true), 'key')\n\n      } else if (json5\n             &&  Uni.isIdentifierStart(chr) || (chr === '\\\\' && input[position] === 'u')) {\n        // unicode char or a unicode sequence\n        var rollback = position - 1\n        var result = parseIdentifier()\n\n        if (result === undefined) {\n          position = rollback\n          return tokenEnd(undefined)\n        } else {\n          return tokenEnd(result, 'key')\n        }\n\n      } else {\n        position--\n        return tokenEnd(undefined)\n      }\n    }\n  }\n\n  function skipWhiteSpace() {\n    tokenStart()\n    while (position < length) {\n      var chr = input[position++]\n\n      if (isLineTerminator(chr)) {\n        position--\n        tokenEnd(undefined, 'whitespace')\n        tokenStart()\n        position++\n        newline(chr)\n        tokenEnd(undefined, 'newline')\n        tokenStart()\n\n      } else if (isWhiteSpace(chr)) {\n        // nothing\n\n      } else if (chr === '/'\n             && json5\n             && (input[position] === '/' || input[position] === '*')\n      ) {\n        position--\n        tokenEnd(undefined, 'whitespace')\n        tokenStart()\n        position++\n        skipComment(input[position++] === '*')\n        tokenEnd(undefined, 'comment')\n        tokenStart()\n\n      } else {\n        position--\n        break\n      }\n    }\n    return tokenEnd(undefined, 'whitespace')\n  }\n\n  function skipComment(multi) {\n    while (position < length) {\n      var chr = input[position++]\n\n      if (isLineTerminator(chr)) {\n        // LineTerminator is an end of singleline comment\n        if (!multi) {\n          // let parent function deal with newline\n          position--\n          return\n        }\n\n        newline(chr)\n\n      } else if (chr === '*' && multi) {\n        // end of multiline comment\n        if (input[position] === '/') {\n          position++\n          return\n        }\n\n      } else {\n        // nothing\n      }\n    }\n\n    if (multi) {\n      fail('Unclosed multiline comment')\n    }\n  }\n\n  function parseKeyword(keyword) {\n    // keyword[0] is not checked because it should've checked earlier\n    var _pos = position\n    var len = keyword.length\n    for (var i=1; i<len; i++) {\n      if (position >= length || keyword[i] != input[position]) {\n        position = _pos-1\n        fail()\n      }\n      position++\n    }\n  }\n\n  function parseObject() {\n    var result = options.null_prototype ? Object.create(null) : {}\n      , empty_object = {}\n      , is_non_empty = false\n\n    while (position < length) {\n      skipWhiteSpace()\n      var item1 = parseKey()\n      skipWhiteSpace()\n      tokenStart()\n      var chr = input[position++]\n      tokenEnd(undefined, 'separator')\n\n      if (chr === '}' && item1 === undefined) {\n        if (!json5 && is_non_empty) {\n          position--\n          fail('Trailing comma in object')\n        }\n        return result\n\n      } else if (chr === ':' && item1 !== undefined) {\n        skipWhiteSpace()\n        stack.push(item1)\n        var item2 = parseGeneric()\n        stack.pop()\n\n        if (item2 === undefined) fail('No value found for key ' + item1)\n        if (typeof(item1) !== 'string') {\n          if (!json5 || typeof(item1) !== 'number') {\n            fail('Wrong key type: ' + item1)\n          }\n        }\n\n        if ((item1 in empty_object || empty_object[item1] != null) && options.reserved_keys !== 'replace') {\n          if (options.reserved_keys === 'throw') {\n            fail('Reserved key: ' + item1)\n          } else {\n            // silently ignore it\n          }\n        } else {\n          if (typeof(options.reviver) === 'function') {\n            item2 = options.reviver.call(null, item1, item2)\n          }\n\n          if (item2 !== undefined) {\n            is_non_empty = true\n            Object.defineProperty(result, item1, {\n              value: item2,\n              enumerable: true,\n              configurable: true,\n              writable: true,\n            })\n          }\n        }\n\n        skipWhiteSpace()\n\n        tokenStart()\n        var chr = input[position++]\n        tokenEnd(undefined, 'separator')\n\n        if (chr === ',') {\n          continue\n\n        } else if (chr === '}') {\n          return result\n\n        } else {\n          fail()\n        }\n\n      } else {\n        position--\n        fail()\n      }\n    }\n\n    fail()\n  }\n\n  function parseArray() {\n    var result = []\n\n    while (position < length) {\n      skipWhiteSpace()\n      stack.push(result.length)\n      var item = parseGeneric()\n      stack.pop()\n      skipWhiteSpace()\n      tokenStart()\n      var chr = input[position++]\n      tokenEnd(undefined, 'separator')\n\n      if (item !== undefined) {\n        if (typeof(options.reviver) === 'function') {\n          item = options.reviver.call(null, String(result.length), item)\n        }\n        if (item === undefined) {\n          result.length++\n          item = true // hack for check below, not included into result\n        } else {\n          result.push(item)\n        }\n      }\n\n      if (chr === ',') {\n        if (item === undefined) {\n          fail('Elisions are not supported')\n        }\n\n      } else if (chr === ']') {\n        if (!json5 && item === undefined && result.length) {\n          position--\n          fail('Trailing comma in array')\n        }\n        return result\n\n      } else {\n        position--\n        fail()\n      }\n    }\n  }\n\n  function parseNumber() {\n    // rewind because we don't know first char\n    position--\n\n    var start = position\n      , chr = input[position++]\n      , t\n\n    var to_num = function(is_octal) {\n      var str = input.substr(start, position - start)\n\n      if (is_octal) {\n        var result = parseInt(str.replace(/^0o?/, ''), 8)\n      } else {\n        var result = Number(str)\n      }\n\n      if (Number.isNaN(result)) {\n        position--\n        fail('Bad numeric literal - \"' + input.substr(start, position - start + 1) + '\"')\n      } else if (!json5 && !str.match(/^-?(0|[1-9][0-9]*)(\\.[0-9]+)?(e[+-]?[0-9]+)?$/i)) {\n        // additional restrictions imposed by json\n        position--\n        fail('Non-json numeric literal - \"' + input.substr(start, position - start + 1) + '\"')\n      } else {\n        return result\n      }\n    }\n\n    // ex: -5982475.249875e+29384\n    //     ^ skipping this\n    if (chr === '-' || (chr === '+' && json5)) chr = input[position++]\n\n    if (chr === 'N' && json5) {\n      parseKeyword('NaN')\n      return NaN\n    }\n\n    if (chr === 'I' && json5) {\n      parseKeyword('Infinity')\n\n      // returning +inf or -inf\n      return to_num()\n    }\n\n    if (chr >= '1' && chr <= '9') {\n      // ex: -5982475.249875e+29384\n      //        ^^^ skipping these\n      while (position < length && isDecDigit(input[position])) position++\n      chr = input[position++]\n    }\n\n    // special case for leading zero: 0.123456\n    if (chr === '0') {\n      chr = input[position++]\n\n      //             new syntax, \"0o777\"           old syntax, \"0777\"\n      var is_octal = chr === 'o' || chr === 'O' || isOctDigit(chr)\n      var is_hex = chr === 'x' || chr === 'X'\n\n      if (json5 && (is_octal || is_hex)) {\n        while (position < length\n           &&  (is_hex ? isHexDigit : isOctDigit)( input[position] )\n        ) position++\n\n        var sign = 1\n        if (input[start] === '-') {\n          sign = -1\n          start++\n        } else if (input[start] === '+') {\n          start++\n        }\n\n        return sign * to_num(is_octal)\n      }\n    }\n\n    if (chr === '.') {\n      // ex: -5982475.249875e+29384\n      //                ^^^ skipping these\n      while (position < length && isDecDigit(input[position])) position++\n      chr = input[position++]\n    }\n\n    if (chr === 'e' || chr === 'E') {\n      chr = input[position++]\n      if (chr === '-' || chr === '+') position++\n      // ex: -5982475.249875e+29384\n      //                       ^^^ skipping these\n      while (position < length && isDecDigit(input[position])) position++\n      chr = input[position++]\n    }\n\n    // we have char in the buffer, so count for it\n    position--\n    return to_num()\n  }\n\n  function parseIdentifier() {\n    // rewind because we don't know first char\n    position--\n\n    var result = ''\n\n    while (position < length) {\n      var chr = input[position++]\n\n      if (chr === '\\\\'\n      &&  input[position] === 'u'\n      &&  isHexDigit(input[position+1])\n      &&  isHexDigit(input[position+2])\n      &&  isHexDigit(input[position+3])\n      &&  isHexDigit(input[position+4])\n      ) {\n        // UnicodeEscapeSequence\n        chr = String.fromCharCode(parseInt(input.substr(position+1, 4), 16))\n        position += 5\n      }\n\n      if (result.length) {\n        // identifier started\n        if (Uni.isIdentifierPart(chr)) {\n          result += chr\n        } else {\n          position--\n          return result\n        }\n\n      } else {\n        if (Uni.isIdentifierStart(chr)) {\n          result += chr\n        } else {\n          return undefined\n        }\n      }\n    }\n\n    fail()\n  }\n\n  function parseString(endChar) {\n    // 7.8.4 of ES262 spec\n    var result = ''\n\n    while (position < length) {\n      var chr = input[position++]\n\n      if (chr === endChar) {\n        return result\n\n      } else if (chr === '\\\\') {\n        if (position >= length) fail()\n        chr = input[position++]\n\n        if (unescapeMap[chr] && (json5 || (chr != 'v' && chr != \"'\"))) {\n          result += unescapeMap[chr]\n\n        } else if (json5 && isLineTerminator(chr)) {\n          // line continuation\n          newline(chr)\n\n        } else if (chr === 'u' || (chr === 'x' && json5)) {\n          // unicode/character escape sequence\n          var off = chr === 'u' ? 4 : 2\n\n          // validation for \\uXXXX\n          for (var i=0; i<off; i++) {\n            if (position >= length) fail()\n            if (!isHexDigit(input[position])) fail('Bad escape sequence')\n            position++\n          }\n\n          result += String.fromCharCode(parseInt(input.substr(position-off, off), 16))\n        } else if (json5 && isOctDigit(chr)) {\n          if (chr < '4' && isOctDigit(input[position]) && isOctDigit(input[position+1])) {\n            // three-digit octal\n            var digits = 3\n          } else if (isOctDigit(input[position])) {\n            // two-digit octal\n            var digits = 2\n          } else {\n            var digits = 1\n          }\n          position += digits - 1\n          result += String.fromCharCode(parseInt(input.substr(position-digits, digits), 8))\n          /*if (!isOctDigit(input[position])) {\n            // \\0 is allowed still\n            result += '\\0'\n          } else {\n            fail('Octal literals are not supported')\n          }*/\n\n        } else if (json5) {\n          // \\X -> x\n          result += chr\n\n        } else {\n          position--\n          fail()\n        }\n\n      } else if (isLineTerminator(chr)) {\n        fail()\n\n      } else {\n        if (!json5 && chr.charCodeAt(0) < 32) {\n          position--\n          fail('Unexpected control character')\n        }\n\n        // SourceCharacter but not one of \" or \\ or LineTerminator\n        result += chr\n      }\n    }\n\n    fail()\n  }\n\n  skipWhiteSpace()\n  var return_value = parseGeneric()\n  if (return_value !== undefined || position < length) {\n    skipWhiteSpace()\n\n    if (position >= length) {\n      if (typeof(options.reviver) === 'function') {\n        return_value = options.reviver.call(null, '', return_value)\n      }\n      return return_value\n    } else {\n      fail()\n    }\n\n  } else {\n    if (position) {\n      fail('No data, only a whitespace')\n    } else {\n      fail('No data, empty input')\n    }\n  }\n}\n\n/*\n * parse(text, options)\n * or\n * parse(text, reviver)\n *\n * where:\n * text - string\n * options - object\n * reviver - function\n */\nmodule.exports.parse = function parseJSON(input, options) {\n  // support legacy functions\n  if (typeof(options) === 'function') {\n    options = {\n      reviver: options\n    }\n  }\n\n  if (input === undefined) {\n    // parse(stringify(x)) should be equal x\n    // with JSON functions it is not 'cause of undefined\n    // so we're fixing it\n    return undefined\n  }\n\n  // JSON.parse compat\n  if (typeof(input) !== 'string') input = String(input)\n  if (options == null) options = {}\n  if (options.reserved_keys == null) options.reserved_keys = 'ignore'\n\n  if (options.reserved_keys === 'throw' || options.reserved_keys === 'ignore') {\n    if (options.null_prototype == null) {\n      options.null_prototype = true\n    }\n  }\n\n  try {\n    return parse(input, options)\n  } catch(err) {\n    // jju is a recursive parser, so JSON.parse(\"{{{{{{{\") could blow up the stack\n    //\n    // this catch is used to skip all those internal calls\n    if (err instanceof SyntaxError && err.row != null && err.column != null) {\n      var old_err = err\n      err = SyntaxError(old_err.message)\n      err.column = old_err.column\n      err.row = old_err.row\n    }\n    throw err\n  }\n}\n\nmodule.exports.tokenize = function tokenizeJSON(input, options) {\n  if (options == null) options = {}\n\n  options._tokenize = function(smth) {\n    if (options._addstack) smth.stack.unshift.apply(smth.stack, options._addstack)\n    tokens.push(smth)\n  }\n\n  var tokens = []\n  tokens.data = module.exports.parse(input, options)\n  return tokens\n}\n\n"]}