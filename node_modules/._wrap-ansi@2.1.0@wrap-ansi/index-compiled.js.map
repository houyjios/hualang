{"version":3,"sources":["../sass-graph/node_modules/yargs/node_modules/cliui/node_modules/wrap-ansi/index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\nvar stringWidth = require('string-width');\nvar stripAnsi = require('strip-ansi');\n\nvar ESCAPES = [\n\t'\\u001b',\n\t'\\u009b'\n];\n\nvar END_CODE = 39;\n\nvar ESCAPE_CODES = {\n\t0: 0,\n\t1: 22,\n\t2: 22,\n\t3: 23,\n\t4: 24,\n\t7: 27,\n\t8: 28,\n\t9: 29,\n\t30: 39,\n\t31: 39,\n\t32: 39,\n\t33: 39,\n\t34: 39,\n\t35: 39,\n\t36: 39,\n\t37: 39,\n\t90: 39,\n\t40: 49,\n\t41: 49,\n\t42: 49,\n\t43: 49,\n\t44: 49,\n\t45: 49,\n\t46: 49,\n\t47: 49\n};\n\nfunction wrapAnsi(code) {\n\treturn ESCAPES[0] + '[' + code + 'm';\n}\n\n// calculate the length of words split on ' ', ignoring\n// the extra characters added by ansi escape codes.\nfunction wordLengths(str) {\n\treturn str.split(' ').map(function (s) {\n\t\treturn stringWidth(s);\n\t});\n}\n\n// wrap a long word across multiple rows.\n// ansi escape codes do not count towards length.\nfunction wrapWord(rows, word, cols) {\n\tvar insideEscape = false;\n\tvar visible = stripAnsi(rows[rows.length - 1]).length;\n\n\tfor (var i = 0; i < word.length; i++) {\n\t\tvar x = word[i];\n\n\t\trows[rows.length - 1] += x;\n\n\t\tif (ESCAPES.indexOf(x) !== -1) {\n\t\t\tinsideEscape = true;\n\t\t} else if (insideEscape && x === 'm') {\n\t\t\tinsideEscape = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (insideEscape) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvisible++;\n\n\t\tif (visible >= cols && i < word.length - 1) {\n\t\t\trows.push('');\n\t\t\tvisible = 0;\n\t\t}\n\t}\n\n\t// it's possible that the last row we copy over is only\n\t// ansi escape characters, handle this edge-case.\n\tif (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {\n\t\trows[rows.length - 2] += rows.pop();\n\t}\n}\n\n// the wrap-ansi module can be invoked\n// in either 'hard' or 'soft' wrap mode.\n//\n// 'hard' will never allow a string to take up more\n// than cols characters.\n//\n// 'soft' allows long words to expand past the column length.\nfunction exec(str, cols, opts) {\n\tvar options = opts || {};\n\n\tvar pre = '';\n\tvar ret = '';\n\tvar escapeCode;\n\n\tvar lengths = wordLengths(str);\n\tvar words = str.split(' ');\n\tvar rows = [''];\n\n\tfor (var i = 0, word; (word = words[i]) !== undefined; i++) {\n\t\tvar rowLength = stringWidth(rows[rows.length - 1]);\n\n\t\tif (rowLength) {\n\t\t\trows[rows.length - 1] += ' ';\n\t\t\trowLength++;\n\t\t}\n\n\t\t// in 'hard' wrap mode, the length of a line is\n\t\t// never allowed to extend past 'cols'.\n\t\tif (lengths[i] > cols && options.hard) {\n\t\t\tif (rowLength) {\n\t\t\t\trows.push('');\n\t\t\t}\n\t\t\twrapWord(rows, word, cols);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (rowLength + lengths[i] > cols && rowLength > 0) {\n\t\t\tif (options.wordWrap === false && rowLength < cols) {\n\t\t\t\twrapWord(rows, word, cols);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows.push('');\n\t\t}\n\n\t\trows[rows.length - 1] += word;\n\t}\n\n\tpre = rows.map(function (r) {\n\t\treturn r.trim();\n\t}).join('\\n');\n\n\tfor (var j = 0; j < pre.length; j++) {\n\t\tvar y = pre[j];\n\n\t\tret += y;\n\n\t\tif (ESCAPES.indexOf(y) !== -1) {\n\t\t\tvar code = parseFloat(/[0-9][^m]*/.exec(pre.slice(j, j + 4)));\n\t\t\tescapeCode = code === END_CODE ? null : code;\n\t\t}\n\n\t\tif (escapeCode && ESCAPE_CODES[escapeCode]) {\n\t\t\tif (pre[j + 1] === '\\n') {\n\t\t\t\tret += wrapAnsi(ESCAPE_CODES[escapeCode]);\n\t\t\t} else if (y === '\\n') {\n\t\t\t\tret += wrapAnsi(escapeCode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// for each line break, invoke the method separately.\nmodule.exports = function (str, cols, opts) {\n\treturn String(str).split('\\n').map(function (substr) {\n\t\treturn exec(substr, cols, opts);\n\t}).join('\\n');\n};\n"]}