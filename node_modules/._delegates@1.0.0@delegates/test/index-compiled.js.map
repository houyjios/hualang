{"version":3,"sources":["../../delegates/test/index.js"],"names":[],"mappings":";;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,WAAW,QAAQ,IAAR,CAAf;;AAEA,SAAS,eAAT,EAA0B,YAAU;AAClC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAI,MAAM,EAAV;;AAEA,QAAI,OAAJ,GAAc;AACZ,WAAK,aAAS,GAAT,EAAa;AAChB,eAAO,QAAQ,IAAI,OAAnB;AACA,eAAO,GAAP;AACD;AAJW,KAAd;;AAOA,aAAS,GAAT,EAAc,SAAd,EAAyB,MAAzB,CAAgC,KAAhC;;AAEA,QAAI,GAAJ,CAAQ,WAAR,EAAqB,MAArB,CAA4B,KAA5B,CAAkC,WAAlC;AACD,GAbD;AAcD,CAfD;;AAiBA,SAAS,eAAT,EAA0B,YAAU;AAClC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAI,MAAM,EAAV;;AAEA,QAAI,OAAJ,GAAc;AACZ,UAAI,IAAJ,GAAW;AACT,eAAO,WAAP;AACD;AAHW,KAAd;;AAMA,aAAS,GAAT,EAAc,SAAd,EAAyB,MAAzB,CAAgC,MAAhC;;AAEA,QAAI,IAAJ,CAAS,MAAT,CAAgB,KAAhB,CAAsB,WAAtB;AACD,GAZD;AAaD,CAdD;;AAgBA,SAAS,eAAT,EAA0B,YAAU;AAClC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAI,MAAM,EAAV;;AAEA,QAAI,OAAJ,GAAc;AACZ,UAAI,IAAJ,GAAW;AACT,eAAO,KAAK,KAAL,CAAW,WAAX,EAAP;AACD,OAHW;;AAKZ,UAAI,IAAJ,CAAS,GAAT,EAAc;AACZ,aAAK,KAAL,GAAa,GAAb;AACD;AAPW,KAAd;;AAUA,aAAS,GAAT,EAAc,SAAd,EAAyB,MAAzB,CAAgC,MAAhC;;AAEA,QAAI,IAAJ,GAAW,KAAX;AACA,QAAI,OAAJ,CAAY,IAAZ,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,KAA9B;AACD,GAjBD;AAkBD,CAnBD;;AAqBA,SAAS,eAAT,EAA0B,YAAU;AAClC,KAAG,qCAAH,EAA0C,YAAU;AAClD,QAAI,MAAM,EAAV;;AAEA,QAAI,OAAJ,GAAc;AACZ,UAAI,IAAJ,GAAW;AACT,eAAO,KAAK,KAAL,CAAW,WAAX,EAAP;AACD,OAHW;;AAKZ,UAAI,IAAJ,CAAS,GAAT,EAAc;AACZ,aAAK,KAAL,GAAa,GAAb;AACD;AAPW,KAAd;;AAUA,aAAS,GAAT,EAAc,SAAd,EAAyB,MAAzB,CAAgC,MAAhC;;AAEA,QAAI,IAAJ,GAAW,KAAX;AACA,QAAI,IAAJ,CAAS,MAAT,CAAgB,KAAhB,CAAsB,KAAtB;AACD,GAjBD;AAkBD,CAnBD;;AAqBA,SAAS,eAAT,EAA0B,YAAY;AACpC,KAAG,qCAAH,EAA0C,YAAY;AACpD,QAAI,MAAM;AACR,gBAAU;AACR,aAAK;AADG;AADF,KAAV;;AAMA,aAAS,GAAT,EAAc,UAAd,EAA0B,MAA1B,CAAiC,KAAjC;;AAEA,QAAI,GAAJ,GAAU,MAAV,CAAiB,KAAjB,CAAuB,aAAvB;AACA,QAAI,GAAJ,CAAQ,YAAR,EAAsB,MAAtB,CAA6B,KAA7B,CAAmC,GAAnC;AACA,QAAI,QAAJ,CAAa,GAAb,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,YAA9B;AACD,GAZD;AAaD,CAdD","file":"index-compiled.js","sourcesContent":["\nvar assert = require('assert');\nvar delegate = require('..');\n\ndescribe('.method(name)', function(){\n  it('should delegate methods', function(){\n    var obj = {};\n\n    obj.request = {\n      foo: function(bar){\n        assert(this == obj.request);\n        return bar;\n      }\n    };\n\n    delegate(obj, 'request').method('foo');\n\n    obj.foo('something').should.equal('something');\n  })\n})\n\ndescribe('.getter(name)', function(){\n  it('should delegate getters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return 'text/html';\n      }\n    }\n\n    delegate(obj, 'request').getter('type');\n\n    obj.type.should.equal('text/html');\n  })\n})\n\ndescribe('.setter(name)', function(){\n  it('should delegate setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').setter('type');\n\n    obj.type = 'hey';\n    obj.request.type.should.equal('HEY');\n  })\n})\n\ndescribe('.access(name)', function(){\n  it('should delegate getters and setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').access('type');\n\n    obj.type = 'hey';\n    obj.type.should.equal('HEY');\n  })\n})\n\ndescribe('.fluent(name)', function () {\n  it('should delegate in a fluent fashion', function () {\n    var obj = {\n      settings: {\n        env: 'development'\n      }\n    };\n\n    delegate(obj, 'settings').fluent('env');\n\n    obj.env().should.equal('development');\n    obj.env('production').should.equal(obj);\n    obj.settings.env.should.equal('production');\n  })\n})\n"]}